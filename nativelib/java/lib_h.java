// Generated by jextract

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
public class lib_h  {

    public static final OfByte C_CHAR = Constants$root.C_CHAR$LAYOUT;
    public static final OfShort C_SHORT = Constants$root.C_SHORT$LAYOUT;
    public static final OfInt C_INT = Constants$root.C_LONG$LAYOUT;
    public static final OfInt C_LONG = Constants$root.C_LONG$LAYOUT;
    public static final OfLong C_LONG_LONG = Constants$root.C_LONG_LONG$LAYOUT;
    public static final OfFloat C_FLOAT = Constants$root.C_FLOAT$LAYOUT;
    public static final OfDouble C_DOUBLE = Constants$root.C_DOUBLE$LAYOUT;
    public static final OfAddress C_POINTER = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * #define __GNUC_VA_LIST 1
     * }
     */
    public static int __GNUC_VA_LIST() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define true 1
     * }
     */
    public static int true_() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define false 0
     * }
     */
    public static int false_() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define __bool_true_false_are_defined 1
     * }
     */
    public static int __bool_true_false_are_defined() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _VCRT_COMPILER_PREPROCESSOR 1
     * }
     */
    public static int _VCRT_COMPILER_PREPROCESSOR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _SAL_VERSION 20
     * }
     */
    public static int _SAL_VERSION() {
        return (int)20L;
    }
    /**
     * {@snippet :
     * #define __SAL_H_VERSION 180000000
     * }
     */
    public static int __SAL_H_VERSION() {
        return (int)180000000L;
    }
    /**
     * {@snippet :
     * #define _USE_DECLSPECS_FOR_SAL 0
     * }
     */
    public static int _USE_DECLSPECS_FOR_SAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _USE_ATTRIBUTES_FOR_SAL 0
     * }
     */
    public static int _USE_ATTRIBUTES_FOR_SAL() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _CRT_PACKING 8
     * }
     */
    public static int _CRT_PACKING() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define _HAS_EXCEPTIONS 1
     * }
     */
    public static int _HAS_EXCEPTIONS() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _HAS_CXX17 0
     * }
     */
    public static int _HAS_CXX17() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _HAS_CXX20 0
     * }
     */
    public static int _HAS_CXX20() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _HAS_NODISCARD 0
     * }
     */
    public static int _HAS_NODISCARD() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MIN 0
     * }
     */
    public static int WCHAR_MIN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WCHAR_MAX 65535
     * }
     */
    public static int WCHAR_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define WINT_MIN 0
     * }
     */
    public static int WINT_MIN() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define WINT_MAX 65535
     * }
     */
    public static int WINT_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define _ARGMAX 100
     * }
     */
    public static int _ARGMAX() {
        return (int)100L;
    }
    /**
     * {@snippet :
     * #define _CRT_INT_MAX 2147483647
     * }
     */
    public static int _CRT_INT_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define _CRT_FUNCTIONS_REQUIRED 1
     * }
     */
    public static int _CRT_FUNCTIONS_REQUIRED() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _CRT_HAS_CXX17 0
     * }
     */
    public static int _CRT_HAS_CXX17() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE 1
     * }
     */
    public static int _ARM_WINAPI_PARTITION_DESKTOP_SDK_AVAILABLE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _CRT_BUILD_DESKTOP_APP 1
     * }
     */
    public static int _CRT_BUILD_DESKTOP_APP() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _CRT_INTERNAL_NONSTDC_NAMES 1
     * }
     */
    public static int _CRT_INTERNAL_NONSTDC_NAMES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define __STDC_WANT_SECURE_LIB__ 1
     * }
     */
    public static int __STDC_WANT_SECURE_LIB__() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _SECURECRT_FILL_BUFFER_PATTERN 254
     * }
     */
    public static int _SECURECRT_FILL_BUFFER_PATTERN() {
        return (int)254L;
    }
    /**
     * {@snippet :
     * #define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES 0
     * }
     */
    public static int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT 0
     * }
     */
    public static int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_COUNT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES 1
     * }
     */
    public static int _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY 0
     * }
     */
    public static int _CRT_SECURE_CPP_OVERLOAD_STANDARD_NAMES_MEMORY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY 0
     * }
     */
    public static int _CRT_SECURE_CPP_OVERLOAD_SECURE_NAMES_MEMORY() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define CHAR_BIT 8
     * }
     */
    public static int CHAR_BIT() {
        return (int)8L;
    }
    /**
     * {@snippet :
     * #define SCHAR_MAX 127
     * }
     */
    public static int SCHAR_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define UCHAR_MAX 255
     * }
     */
    public static int UCHAR_MAX() {
        return (int)255L;
    }
    /**
     * {@snippet :
     * #define MB_LEN_MAX 5
     * }
     */
    public static int MB_LEN_MAX() {
        return (int)5L;
    }
    /**
     * {@snippet :
     * #define SHRT_MAX 32767
     * }
     */
    public static int SHRT_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define USHRT_MAX 65535
     * }
     */
    public static int USHRT_MAX() {
        return (int)65535L;
    }
    /**
     * {@snippet :
     * #define INT_MAX 2147483647
     * }
     */
    public static int INT_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define EXIT_SUCCESS 0
     * }
     */
    public static int EXIT_SUCCESS() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define EXIT_FAILURE 1
     * }
     */
    public static int EXIT_FAILURE() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _WRITE_ABORT_MSG 1
     * }
     */
    public static int _WRITE_ABORT_MSG() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _CALL_REPORTFAULT 2
     * }
     */
    public static int _CALL_REPORTFAULT() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define _OUT_TO_DEFAULT 0
     * }
     */
    public static int _OUT_TO_DEFAULT() {
        return (int)0L;
    }
    /**
     * {@snippet :
     * #define _OUT_TO_STDERR 1
     * }
     */
    public static int _OUT_TO_STDERR() {
        return (int)1L;
    }
    /**
     * {@snippet :
     * #define _OUT_TO_MSGBOX 2
     * }
     */
    public static int _OUT_TO_MSGBOX() {
        return (int)2L;
    }
    /**
     * {@snippet :
     * #define _REPORT_ERRMODE 3
     * }
     */
    public static int _REPORT_ERRMODE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define RAND_MAX 32767
     * }
     */
    public static int RAND_MAX() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * #define _MAX_PATH 260
     * }
     */
    public static int _MAX_PATH() {
        return (int)260L;
    }
    /**
     * {@snippet :
     * #define _MAX_DRIVE 3
     * }
     */
    public static int _MAX_DRIVE() {
        return (int)3L;
    }
    /**
     * {@snippet :
     * #define _MAX_DIR 256
     * }
     */
    public static int _MAX_DIR() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define _MAX_FNAME 256
     * }
     */
    public static int _MAX_FNAME() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define _MAX_EXT 256
     * }
     */
    public static int _MAX_EXT() {
        return (int)256L;
    }
    /**
     * {@snippet :
     * #define _MAX_ENV 32767
     * }
     */
    public static int _MAX_ENV() {
        return (int)32767L;
    }
    /**
     * {@snippet :
     * typedef char* va_list;
     * }
     */
    public static final OfAddress va_list = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef char* __gnuc_va_list;
     * }
     */
    public static final OfAddress __gnuc_va_list = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long uintptr_t;
     * }
     */
    public static final OfLong uintptr_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle __va_start$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__va_start$MH,"__va_start");
    }
    /**
     * {@snippet :
     * void __va_start(va_list*,...);
     * }
     */
    public static void __va_start(MemorySegment x0, Object... x1) {
        var mh$ = __va_start$MH();
        try {
            mh$.invokeExact(x0, x1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef unsigned long long size_t;
     * }
     */
    public static final OfLong size_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef long long ptrdiff_t;
     * }
     */
    public static final OfLong ptrdiff_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef long long intptr_t;
     * }
     */
    public static final OfLong intptr_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short wchar_t;
     * }
     */
    public static final OfShort wchar_t = Constants$root.C_SHORT$LAYOUT;
    public static MethodHandle __security_init_cookie$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__security_init_cookie$MH,"__security_init_cookie");
    }
    /**
     * {@snippet :
     * void __security_init_cookie();
     * }
     */
    public static void __security_init_cookie() {
        var mh$ = __security_init_cookie$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __security_check_cookie$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__security_check_cookie$MH,"__security_check_cookie");
    }
    /**
     * {@snippet :
     * void __security_check_cookie(uintptr_t _StackCookie);
     * }
     */
    public static void __security_check_cookie(long _StackCookie) {
        var mh$ = __security_check_cookie$MH();
        try {
            mh$.invokeExact(_StackCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __report_gsfailure$MH() {
        return RuntimeHelper.requireNonNull(constants$0.__report_gsfailure$MH,"__report_gsfailure");
    }
    /**
     * {@snippet :
     * void __report_gsfailure(uintptr_t _StackCookie);
     * }
     */
    public static void __report_gsfailure(long _StackCookie) {
        var mh$ = __report_gsfailure$MH();
        try {
            mh$.invokeExact(_StackCookie);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MemoryLayout __security_cookie$LAYOUT() {
        return constants$0.__security_cookie$LAYOUT;
    }
    public static VarHandle __security_cookie$VH() {
        return constants$0.__security_cookie$VH;
    }
    public static MemorySegment __security_cookie$SEGMENT() {
        return RuntimeHelper.requireNonNull(constants$0.__security_cookie$SEGMENT,"__security_cookie");
    }
    /**
     * Getter for variable:
     * {@snippet :
     * uintptr_t __security_cookie;
     * }
     */
    public static long __security_cookie$get() {
        return (long) constants$0.__security_cookie$VH.get(RuntimeHelper.requireNonNull(constants$0.__security_cookie$SEGMENT, "__security_cookie"));
    }
    /**
     * Setter for variable:
     * {@snippet :
     * uintptr_t __security_cookie;
     * }
     */
    public static void __security_cookie$set(long x) {
        constants$0.__security_cookie$VH.set(RuntimeHelper.requireNonNull(constants$0.__security_cookie$SEGMENT, "__security_cookie"), x);
    }
    /**
     * {@snippet :
     * typedef signed char int8_t;
     * }
     */
    public static final OfByte int8_t = Constants$root.C_CHAR$LAYOUT;
    /**
     * {@snippet :
     * typedef short int16_t;
     * }
     */
    public static final OfShort int16_t = Constants$root.C_SHORT$LAYOUT;
    /**
     * {@snippet :
     * typedef int int32_t;
     * }
     */
    public static final OfInt int32_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef long long int64_t;
     * }
     */
    public static final OfLong int64_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned char uint8_t;
     * }
     */
    public static final OfByte uint8_t = Constants$root.C_CHAR$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short uint16_t;
     * }
     */
    public static final OfShort uint16_t = Constants$root.C_SHORT$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned int uint32_t;
     * }
     */
    public static final OfInt uint32_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long uint64_t;
     * }
     */
    public static final OfLong uint64_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef signed char int_least8_t;
     * }
     */
    public static final OfByte int_least8_t = Constants$root.C_CHAR$LAYOUT;
    /**
     * {@snippet :
     * typedef short int_least16_t;
     * }
     */
    public static final OfShort int_least16_t = Constants$root.C_SHORT$LAYOUT;
    /**
     * {@snippet :
     * typedef int int_least32_t;
     * }
     */
    public static final OfInt int_least32_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef long long int_least64_t;
     * }
     */
    public static final OfLong int_least64_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned char uint_least8_t;
     * }
     */
    public static final OfByte uint_least8_t = Constants$root.C_CHAR$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short uint_least16_t;
     * }
     */
    public static final OfShort uint_least16_t = Constants$root.C_SHORT$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned int uint_least32_t;
     * }
     */
    public static final OfInt uint_least32_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long uint_least64_t;
     * }
     */
    public static final OfLong uint_least64_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef signed char int_fast8_t;
     * }
     */
    public static final OfByte int_fast8_t = Constants$root.C_CHAR$LAYOUT;
    /**
     * {@snippet :
     * typedef int int_fast16_t;
     * }
     */
    public static final OfInt int_fast16_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef int int_fast32_t;
     * }
     */
    public static final OfInt int_fast32_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef long long int_fast64_t;
     * }
     */
    public static final OfLong int_fast64_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned char uint_fast8_t;
     * }
     */
    public static final OfByte uint_fast8_t = Constants$root.C_CHAR$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned int uint_fast16_t;
     * }
     */
    public static final OfInt uint_fast16_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned int uint_fast32_t;
     * }
     */
    public static final OfInt uint_fast32_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long uint_fast64_t;
     * }
     */
    public static final OfLong uint_fast64_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef long long intmax_t;
     * }
     */
    public static final OfLong intmax_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long uintmax_t;
     * }
     */
    public static final OfLong uintmax_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle _invalid_parameter_noinfo$MH() {
        return RuntimeHelper.requireNonNull(constants$0._invalid_parameter_noinfo$MH,"_invalid_parameter_noinfo");
    }
    /**
     * {@snippet :
     * void _invalid_parameter_noinfo();
     * }
     */
    public static void _invalid_parameter_noinfo() {
        var mh$ = _invalid_parameter_noinfo$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _invalid_parameter_noinfo_noreturn$MH() {
        return RuntimeHelper.requireNonNull(constants$1._invalid_parameter_noinfo_noreturn$MH,"_invalid_parameter_noinfo_noreturn");
    }
    /**
     * {@snippet :
     * void _invalid_parameter_noinfo_noreturn();
     * }
     */
    public static void _invalid_parameter_noinfo_noreturn() {
        var mh$ = _invalid_parameter_noinfo_noreturn$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _invoke_watson$MH() {
        return RuntimeHelper.requireNonNull(constants$1._invoke_watson$MH,"_invoke_watson");
    }
    /**
     * {@snippet :
     * void _invoke_watson(const wchar_t* _Expression, const wchar_t* _FunctionName, const wchar_t* _FileName, unsigned int _LineNo, uintptr_t _Reserved);
     * }
     */
    public static void _invoke_watson(MemorySegment _Expression, MemorySegment _FunctionName, MemorySegment _FileName, int _LineNo, long _Reserved) {
        var mh$ = _invoke_watson$MH();
        try {
            mh$.invokeExact(_Expression, _FunctionName, _FileName, _LineNo, _Reserved);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef int errno_t;
     * }
     */
    public static final OfInt errno_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short wint_t;
     * }
     */
    public static final OfShort wint_t = Constants$root.C_SHORT$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned short wctype_t;
     * }
     */
    public static final OfShort wctype_t = Constants$root.C_SHORT$LAYOUT;
    /**
     * {@snippet :
     * typedef long __time32_t;
     * }
     */
    public static final OfInt __time32_t = Constants$root.C_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef long long __time64_t;
     * }
     */
    public static final OfLong __time64_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef struct __crt_locale_pointers* _locale_t;
     * }
     */
    public static final OfAddress _locale_t = Constants$root.C_POINTER$LAYOUT;
    /**
     * {@snippet :
     * typedef long long time_t;
     * }
     */
    public static final OfLong time_t = Constants$root.C_LONG_LONG$LAYOUT;
    /**
     * {@snippet :
     * typedef unsigned long long rsize_t;
     * }
     */
    public static final OfLong rsize_t = Constants$root.C_LONG_LONG$LAYOUT;
    public static MethodHandle _calloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$1._calloc_base$MH,"_calloc_base");
    }
    /**
     * {@snippet :
     * void* _calloc_base(size_t _Count, size_t _Size);
     * }
     */
    public static MemorySegment _calloc_base(long _Count, long _Size) {
        var mh$ = _calloc_base$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle calloc$MH() {
        return RuntimeHelper.requireNonNull(constants$1.calloc$MH,"calloc");
    }
    /**
     * {@snippet :
     * void* calloc(size_t _Count, size_t _Size);
     * }
     */
    public static MemorySegment calloc(long _Count, long _Size) {
        var mh$ = calloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _callnewh$MH() {
        return RuntimeHelper.requireNonNull(constants$1._callnewh$MH,"_callnewh");
    }
    /**
     * {@snippet :
     * int _callnewh(size_t _Size);
     * }
     */
    public static int _callnewh(long _Size) {
        var mh$ = _callnewh$MH();
        try {
            return (int)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _expand$MH() {
        return RuntimeHelper.requireNonNull(constants$1._expand$MH,"_expand");
    }
    /**
     * {@snippet :
     * void* _expand(void* _Block, size_t _Size);
     * }
     */
    public static MemorySegment _expand(MemorySegment _Block, long _Size) {
        var mh$ = _expand$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _free_base$MH() {
        return RuntimeHelper.requireNonNull(constants$2._free_base$MH,"_free_base");
    }
    /**
     * {@snippet :
     * void _free_base(void* _Block);
     * }
     */
    public static void _free_base(MemorySegment _Block) {
        var mh$ = _free_base$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle free$MH() {
        return RuntimeHelper.requireNonNull(constants$2.free$MH,"free");
    }
    /**
     * {@snippet :
     * void free(void* _Block);
     * }
     */
    public static void free(MemorySegment _Block) {
        var mh$ = free$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _malloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$2._malloc_base$MH,"_malloc_base");
    }
    /**
     * {@snippet :
     * void* _malloc_base(size_t _Size);
     * }
     */
    public static MemorySegment _malloc_base(long _Size) {
        var mh$ = _malloc_base$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$2.malloc$MH,"malloc");
    }
    /**
     * {@snippet :
     * void* malloc(size_t _Size);
     * }
     */
    public static MemorySegment malloc(long _Size) {
        var mh$ = malloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize_base$MH() {
        return RuntimeHelper.requireNonNull(constants$2._msize_base$MH,"_msize_base");
    }
    /**
     * {@snippet :
     * size_t _msize_base(void* _Block);
     * }
     */
    public static long _msize_base(MemorySegment _Block) {
        var mh$ = _msize_base$MH();
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _msize$MH() {
        return RuntimeHelper.requireNonNull(constants$2._msize$MH,"_msize");
    }
    /**
     * {@snippet :
     * size_t _msize(void* _Block);
     * }
     */
    public static long _msize(MemorySegment _Block) {
        var mh$ = _msize$MH();
        try {
            return (long)mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _realloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$3._realloc_base$MH,"_realloc_base");
    }
    /**
     * {@snippet :
     * void* _realloc_base(void* _Block, size_t _Size);
     * }
     */
    public static MemorySegment _realloc_base(MemorySegment _Block, long _Size) {
        var mh$ = _realloc_base$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$3.realloc$MH,"realloc");
    }
    /**
     * {@snippet :
     * void* realloc(void* _Block, size_t _Size);
     * }
     */
    public static MemorySegment realloc(MemorySegment _Block, long _Size) {
        var mh$ = realloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc_base$MH() {
        return RuntimeHelper.requireNonNull(constants$3._recalloc_base$MH,"_recalloc_base");
    }
    /**
     * {@snippet :
     * void* _recalloc_base(void* _Block, size_t _Count, size_t _Size);
     * }
     */
    public static MemorySegment _recalloc_base(MemorySegment _Block, long _Count, long _Size) {
        var mh$ = _recalloc_base$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$3._recalloc$MH,"_recalloc");
    }
    /**
     * {@snippet :
     * void* _recalloc(void* _Block, size_t _Count, size_t _Size);
     * }
     */
    public static MemorySegment _recalloc(MemorySegment _Block, long _Count, long _Size) {
        var mh$ = _recalloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Count, _Size);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_free$MH() {
        return RuntimeHelper.requireNonNull(constants$3._aligned_free$MH,"_aligned_free");
    }
    /**
     * {@snippet :
     * void _aligned_free(void* _Block);
     * }
     */
    public static void _aligned_free(MemorySegment _Block) {
        var mh$ = _aligned_free$MH();
        try {
            mh$.invokeExact(_Block);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$3._aligned_malloc$MH,"_aligned_malloc");
    }
    /**
     * {@snippet :
     * void* _aligned_malloc(size_t _Size, size_t _Alignment);
     * }
     */
    public static MemorySegment _aligned_malloc(long _Size, long _Alignment) {
        var mh$ = _aligned_malloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_malloc$MH() {
        return RuntimeHelper.requireNonNull(constants$4._aligned_offset_malloc$MH,"_aligned_offset_malloc");
    }
    /**
     * {@snippet :
     * void* _aligned_offset_malloc(size_t _Size, size_t _Alignment, size_t _Offset);
     * }
     */
    public static MemorySegment _aligned_offset_malloc(long _Size, long _Alignment, long _Offset) {
        var mh$ = _aligned_offset_malloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_msize$MH() {
        return RuntimeHelper.requireNonNull(constants$4._aligned_msize$MH,"_aligned_msize");
    }
    /**
     * {@snippet :
     * size_t _aligned_msize(void* _Block, size_t _Alignment, size_t _Offset);
     * }
     */
    public static long _aligned_msize(MemorySegment _Block, long _Alignment, long _Offset) {
        var mh$ = _aligned_msize$MH();
        try {
            return (long)mh$.invokeExact(_Block, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$4._aligned_offset_realloc$MH,"_aligned_offset_realloc");
    }
    /**
     * {@snippet :
     * void* _aligned_offset_realloc(void* _Block, size_t _Size, size_t _Alignment, size_t _Offset);
     * }
     */
    public static MemorySegment _aligned_offset_realloc(MemorySegment _Block, long _Size, long _Alignment, long _Offset) {
        var mh$ = _aligned_offset_realloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_offset_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$4._aligned_offset_recalloc$MH,"_aligned_offset_recalloc");
    }
    /**
     * {@snippet :
     * void* _aligned_offset_recalloc(void* _Block, size_t _Count, size_t _Size, size_t _Alignment, size_t _Offset);
     * }
     */
    public static MemorySegment _aligned_offset_recalloc(MemorySegment _Block, long _Count, long _Size, long _Alignment, long _Offset) {
        var mh$ = _aligned_offset_recalloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Count, _Size, _Alignment, _Offset);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_realloc$MH() {
        return RuntimeHelper.requireNonNull(constants$4._aligned_realloc$MH,"_aligned_realloc");
    }
    /**
     * {@snippet :
     * void* _aligned_realloc(void* _Block, size_t _Size, size_t _Alignment);
     * }
     */
    public static MemorySegment _aligned_realloc(MemorySegment _Block, long _Size, long _Alignment) {
        var mh$ = _aligned_realloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _aligned_recalloc$MH() {
        return RuntimeHelper.requireNonNull(constants$4._aligned_recalloc$MH,"_aligned_recalloc");
    }
    /**
     * {@snippet :
     * void* _aligned_recalloc(void* _Block, size_t _Count, size_t _Size, size_t _Alignment);
     * }
     */
    public static MemorySegment _aligned_recalloc(MemorySegment _Block, long _Count, long _Size, long _Alignment) {
        var mh$ = _aligned_recalloc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Block, _Count, _Size, _Alignment);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * typedef double max_align_t;
     * }
     */
    public static final OfDouble max_align_t = Constants$root.C_DOUBLE$LAYOUT;
    public static MethodHandle bsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$5.bsearch_s$MH,"bsearch_s");
    }
    /**
     * {@snippet :
     * void* bsearch_s(void* _Key, void* _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void* _Context);
     * }
     */
    public static MemorySegment bsearch_s(MemorySegment _Key, MemorySegment _Base, long _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction, MemorySegment _Context) {
        var mh$ = bsearch_s$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort_s$MH() {
        return RuntimeHelper.requireNonNull(constants$5.qsort_s$MH,"qsort_s");
    }
    /**
     * {@snippet :
     * void qsort_s(void* _Base, rsize_t _NumOfElements, rsize_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void* _Context);
     * }
     */
    public static void qsort_s(MemorySegment _Base, long _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction, MemorySegment _Context) {
        var mh$ = qsort_s$MH();
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle bsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$6.bsearch$MH,"bsearch");
    }
    /**
     * {@snippet :
     * void* bsearch(void* _Key, void* _Base, size_t _NumOfElements, size_t _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment bsearch(MemorySegment _Key, MemorySegment _Base, long _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = bsearch$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle qsort$MH() {
        return RuntimeHelper.requireNonNull(constants$6.qsort$MH,"qsort");
    }
    /**
     * {@snippet :
     * void qsort(void* _Base, size_t _NumOfElements, size_t _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static void qsort(MemorySegment _Base, long _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = qsort$MH();
        try {
            mh$.invokeExact(_Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind_s$MH() {
        return RuntimeHelper.requireNonNull(constants$6._lfind_s$MH,"_lfind_s");
    }
    /**
     * {@snippet :
     * void* _lfind_s(void* _Key, void* _Base, unsigned int* _NumOfElements, size_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void* _Context);
     * }
     */
    public static MemorySegment _lfind_s(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction, MemorySegment _Context) {
        var mh$ = _lfind_s$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$6._lfind$MH,"_lfind");
    }
    /**
     * {@snippet :
     * void* _lfind(void* _Key, void* _Base, unsigned int* _NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment _lfind(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, int _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = _lfind$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch_s$MH() {
        return RuntimeHelper.requireNonNull(constants$6._lsearch_s$MH,"_lsearch_s");
    }
    /**
     * {@snippet :
     * void* _lsearch_s(void* _Key, void* _Base, unsigned int* _NumOfElements, size_t _SizeOfElements, _CoreCrtSecureSearchSortCompareFunction _CompareFunction, void* _Context);
     * }
     */
    public static MemorySegment _lsearch_s(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, long _SizeOfElements, MemorySegment _CompareFunction, MemorySegment _Context) {
        var mh$ = _lsearch_s$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction, _Context);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$6._lsearch$MH,"_lsearch");
    }
    /**
     * {@snippet :
     * void* _lsearch(void* _Key, void* _Base, unsigned int* _NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment _lsearch(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, int _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = _lsearch$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lfind$MH() {
        return RuntimeHelper.requireNonNull(constants$7.lfind$MH,"lfind");
    }
    /**
     * {@snippet :
     * void* lfind(void* _Key, void* _Base, unsigned int* _NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment lfind(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, int _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = lfind$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lsearch$MH() {
        return RuntimeHelper.requireNonNull(constants$7.lsearch$MH,"lsearch");
    }
    /**
     * {@snippet :
     * void* lsearch(void* _Key, void* _Base, unsigned int* _NumOfElements, unsigned int _SizeOfElements, _CoreCrtNonSecureSearchSortCompareFunction _CompareFunction);
     * }
     */
    public static MemorySegment lsearch(MemorySegment _Key, MemorySegment _Base, MemorySegment _NumOfElements, int _SizeOfElements, MemorySegment _CompareFunction) {
        var mh$ = lsearch$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Key, _Base, _NumOfElements, _SizeOfElements, _CompareFunction);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$7._itow_s$MH,"_itow_s");
    }
    /**
     * {@snippet :
     * errno_t _itow_s(int _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _itow_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _itow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itow$MH() {
        return RuntimeHelper.requireNonNull(constants$7._itow$MH,"_itow");
    }
    /**
     * {@snippet :
     * wchar_t* _itow(int _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _itow(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _itow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$7._ltow_s$MH,"_ltow_s");
    }
    /**
     * {@snippet :
     * errno_t _ltow_s(long _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ltow_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ltow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltow$MH() {
        return RuntimeHelper.requireNonNull(constants$7._ltow$MH,"_ltow");
    }
    /**
     * {@snippet :
     * wchar_t* _ltow(long _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ltow(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ltow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$8._ultow_s$MH,"_ultow_s");
    }
    /**
     * {@snippet :
     * errno_t _ultow_s(unsigned long _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ultow_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ultow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultow$MH() {
        return RuntimeHelper.requireNonNull(constants$8._ultow$MH,"_ultow");
    }
    /**
     * {@snippet :
     * wchar_t* _ultow(unsigned long _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ultow(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ultow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstod$MH() {
        return RuntimeHelper.requireNonNull(constants$8.wcstod$MH,"wcstod");
    }
    /**
     * {@snippet :
     * double wcstod(const wchar_t* _String, wchar_t** _EndPtr);
     * }
     */
    public static double wcstod(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = wcstod$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$8._wcstod_l$MH,"_wcstod_l");
    }
    /**
     * {@snippet :
     * double _wcstod_l(const wchar_t* _String, wchar_t** _EndPtr, _locale_t _Locale);
     * }
     */
    public static double _wcstod_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _wcstod_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstol$MH() {
        return RuntimeHelper.requireNonNull(constants$8.wcstol$MH,"wcstol");
    }
    /**
     * {@snippet :
     * long wcstol(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static int wcstol(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = wcstol$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$8._wcstol_l$MH,"_wcstol_l");
    }
    /**
     * {@snippet :
     * long _wcstol_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static int _wcstol_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoll$MH() {
        return RuntimeHelper.requireNonNull(constants$9.wcstoll$MH,"wcstoll");
    }
    /**
     * {@snippet :
     * long long wcstoll(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static long wcstoll(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = wcstoll$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$9._wcstoll_l$MH,"_wcstoll_l");
    }
    /**
     * {@snippet :
     * long long _wcstoll_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _wcstoll_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoul$MH() {
        return RuntimeHelper.requireNonNull(constants$9.wcstoul$MH,"wcstoul");
    }
    /**
     * {@snippet :
     * unsigned long wcstoul(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static int wcstoul(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = wcstoul$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoul_l$MH() {
        return RuntimeHelper.requireNonNull(constants$9._wcstoul_l$MH,"_wcstoul_l");
    }
    /**
     * {@snippet :
     * unsigned long _wcstoul_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static int _wcstoul_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoul_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstoull$MH() {
        return RuntimeHelper.requireNonNull(constants$9.wcstoull$MH,"wcstoull");
    }
    /**
     * {@snippet :
     * unsigned long long wcstoull(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static long wcstoull(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = wcstoull$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoull_l$MH() {
        return RuntimeHelper.requireNonNull(constants$9._wcstoull_l$MH,"_wcstoull_l");
    }
    /**
     * {@snippet :
     * unsigned long long _wcstoull_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _wcstoull_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoull_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstof$MH() {
        return RuntimeHelper.requireNonNull(constants$10.wcstof$MH,"wcstof");
    }
    /**
     * {@snippet :
     * float wcstof(const wchar_t* _String, wchar_t** _EndPtr);
     * }
     */
    public static float wcstof(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = wcstof$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wcstof_l$MH,"_wcstof_l");
    }
    /**
     * {@snippet :
     * float _wcstof_l(const wchar_t* _String, wchar_t** _EndPtr, _locale_t _Locale);
     * }
     */
    public static float _wcstof_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _wcstof_l$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wtof$MH,"_wtof");
    }
    /**
     * {@snippet :
     * double _wtof(const wchar_t* _String);
     * }
     */
    public static double _wtof(MemorySegment _String) {
        var mh$ = _wtof$MH();
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wtof_l$MH,"_wtof_l");
    }
    /**
     * {@snippet :
     * double _wtof_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static double _wtof_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtof_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wtoi$MH,"_wtoi");
    }
    /**
     * {@snippet :
     * int _wtoi(const wchar_t* _String);
     * }
     */
    public static int _wtoi(MemorySegment _String) {
        var mh$ = _wtoi$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$10._wtoi_l$MH,"_wtoi_l");
    }
    /**
     * {@snippet :
     * int _wtoi_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static int _wtoi_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtoi_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wtol$MH,"_wtol");
    }
    /**
     * {@snippet :
     * long _wtol(const wchar_t* _String);
     * }
     */
    public static int _wtol(MemorySegment _String) {
        var mh$ = _wtol$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wtol_l$MH,"_wtol_l");
    }
    /**
     * {@snippet :
     * long _wtol_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static int _wtol_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wtoll$MH,"_wtoll");
    }
    /**
     * {@snippet :
     * long long _wtoll(const wchar_t* _String);
     * }
     */
    public static long _wtoll(MemorySegment _String) {
        var mh$ = _wtoll$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$11._wtoll_l$MH,"_wtoll_l");
    }
    /**
     * {@snippet :
     * long long _wtoll_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static long _wtoll_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$11._i64tow_s$MH,"_i64tow_s");
    }
    /**
     * {@snippet :
     * errno_t _i64tow_s(long long _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _i64tow_s(long _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _i64tow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$11._i64tow$MH,"_i64tow");
    }
    /**
     * {@snippet :
     * wchar_t* _i64tow(long long _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _i64tow(long _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _i64tow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow_s$MH() {
        return RuntimeHelper.requireNonNull(constants$12._ui64tow_s$MH,"_ui64tow_s");
    }
    /**
     * {@snippet :
     * errno_t _ui64tow_s(unsigned long long _Value, wchar_t* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ui64tow_s(long _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ui64tow_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64tow$MH() {
        return RuntimeHelper.requireNonNull(constants$12._ui64tow$MH,"_ui64tow");
    }
    /**
     * {@snippet :
     * wchar_t* _ui64tow(unsigned long long _Value, wchar_t* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ui64tow(long _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ui64tow$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$12._wtoi64$MH,"_wtoi64");
    }
    /**
     * {@snippet :
     * long long _wtoi64(const wchar_t* _String);
     * }
     */
    public static long _wtoi64(MemorySegment _String) {
        var mh$ = _wtoi64$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wtoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$12._wtoi64_l$MH,"_wtoi64_l");
    }
    /**
     * {@snippet :
     * long long _wtoi64_l(const wchar_t* _String, _locale_t _Locale);
     * }
     */
    public static long _wtoi64_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _wtoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$12._wcstoi64$MH,"_wcstoi64");
    }
    /**
     * {@snippet :
     * long long _wcstoi64(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static long _wcstoi64(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = _wcstoi64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$12._wcstoi64_l$MH,"_wcstoi64_l");
    }
    /**
     * {@snippet :
     * long long _wcstoi64_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _wcstoi64_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wcstoui64$MH,"_wcstoui64");
    }
    /**
     * {@snippet :
     * unsigned long long _wcstoui64(const wchar_t* _String, wchar_t** _EndPtr, int _Radix);
     * }
     */
    public static long _wcstoui64(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = _wcstoui64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstoui64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wcstoui64_l$MH,"_wcstoui64_l");
    }
    /**
     * {@snippet :
     * unsigned long long _wcstoui64_l(const wchar_t* _String, wchar_t** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _wcstoui64_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _wcstoui64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wfullpath$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wfullpath$MH,"_wfullpath");
    }
    /**
     * {@snippet :
     * wchar_t* _wfullpath(wchar_t* _Buffer, const wchar_t* _Path, size_t _BufferCount);
     * }
     */
    public static MemorySegment _wfullpath(MemorySegment _Buffer, MemorySegment _Path, long _BufferCount) {
        var mh$ = _wfullpath$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Buffer, _Path, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wmakepath_s$MH,"_wmakepath_s");
    }
    /**
     * {@snippet :
     * errno_t _wmakepath_s(wchar_t* _Buffer, size_t _BufferCount, const wchar_t* _Drive, const wchar_t* _Dir, const wchar_t* _Filename, const wchar_t* _Ext);
     * }
     */
    public static int _wmakepath_s(MemorySegment _Buffer, long _BufferCount, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _wmakepath_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wmakepath$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wmakepath$MH,"_wmakepath");
    }
    /**
     * {@snippet :
     * void _wmakepath(wchar_t* _Buffer, const wchar_t* _Drive, const wchar_t* _Dir, const wchar_t* _Filename, const wchar_t* _Ext);
     * }
     */
    public static void _wmakepath(MemorySegment _Buffer, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _wmakepath$MH();
        try {
            mh$.invokeExact(_Buffer, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wperror$MH() {
        return RuntimeHelper.requireNonNull(constants$13._wperror$MH,"_wperror");
    }
    /**
     * {@snippet :
     * void _wperror(const wchar_t* _ErrorMessage);
     * }
     */
    public static void _wperror(MemorySegment _ErrorMessage) {
        var mh$ = _wperror$MH();
        try {
            mh$.invokeExact(_ErrorMessage);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath$MH() {
        return RuntimeHelper.requireNonNull(constants$14._wsplitpath$MH,"_wsplitpath");
    }
    /**
     * {@snippet :
     * void _wsplitpath(const wchar_t* _FullPath, wchar_t* _Drive, wchar_t* _Dir, wchar_t* _Filename, wchar_t* _Ext);
     * }
     */
    public static void _wsplitpath(MemorySegment _FullPath, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _wsplitpath$MH();
        try {
            mh$.invokeExact(_FullPath, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsplitpath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$14._wsplitpath_s$MH,"_wsplitpath_s");
    }
    /**
     * {@snippet :
     * errno_t _wsplitpath_s(const wchar_t* _FullPath, wchar_t* _Drive, size_t _DriveCount, wchar_t* _Dir, size_t _DirCount, wchar_t* _Filename, size_t _FilenameCount, wchar_t* _Ext, size_t _ExtCount);
     * }
     */
    public static int _wsplitpath_s(MemorySegment _FullPath, MemorySegment _Drive, long _DriveCount, MemorySegment _Dir, long _DirCount, MemorySegment _Filename, long _FilenameCount, MemorySegment _Ext, long _ExtCount) {
        var mh$ = _wsplitpath_s$MH();
        try {
            return (int)mh$.invokeExact(_FullPath, _Drive, _DriveCount, _Dir, _DirCount, _Filename, _FilenameCount, _Ext, _ExtCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wdupenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$14._wdupenv_s$MH,"_wdupenv_s");
    }
    /**
     * {@snippet :
     * errno_t _wdupenv_s(wchar_t** _Buffer, size_t* _BufferCount, const wchar_t* _VarName);
     * }
     */
    public static int _wdupenv_s(MemorySegment _Buffer, MemorySegment _BufferCount, MemorySegment _VarName) {
        var mh$ = _wdupenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv$MH() {
        return RuntimeHelper.requireNonNull(constants$14._wgetenv$MH,"_wgetenv");
    }
    /**
     * {@snippet :
     * wchar_t* _wgetenv(const wchar_t* _VarName);
     * }
     */
    public static MemorySegment _wgetenv(MemorySegment _VarName) {
        var mh$ = _wgetenv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wgetenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$14._wgetenv_s$MH,"_wgetenv_s");
    }
    /**
     * {@snippet :
     * errno_t _wgetenv_s(size_t* _RequiredCount, wchar_t* _Buffer, size_t _BufferCount, const wchar_t* _VarName);
     * }
     */
    public static int _wgetenv_s(MemorySegment _RequiredCount, MemorySegment _Buffer, long _BufferCount, MemorySegment _VarName) {
        var mh$ = _wgetenv_s$MH();
        try {
            return (int)mh$.invokeExact(_RequiredCount, _Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv$MH() {
        return RuntimeHelper.requireNonNull(constants$14._wputenv$MH,"_wputenv");
    }
    /**
     * {@snippet :
     * int _wputenv(const wchar_t* _EnvString);
     * }
     */
    public static int _wputenv(MemorySegment _EnvString) {
        var mh$ = _wputenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wputenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$15._wputenv_s$MH,"_wputenv_s");
    }
    /**
     * {@snippet :
     * errno_t _wputenv_s(const wchar_t* _Name, const wchar_t* _Value);
     * }
     */
    public static int _wputenv_s(MemorySegment _Name, MemorySegment _Value) {
        var mh$ = _wputenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Name, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$15._wsearchenv_s$MH,"_wsearchenv_s");
    }
    /**
     * {@snippet :
     * errno_t _wsearchenv_s(const wchar_t* _Filename, const wchar_t* _VarName, wchar_t* _Buffer, size_t _BufferCount);
     * }
     */
    public static int _wsearchenv_s(MemorySegment _Filename, MemorySegment _VarName, MemorySegment _Buffer, long _BufferCount) {
        var mh$ = _wsearchenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Filename, _VarName, _Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsearchenv$MH() {
        return RuntimeHelper.requireNonNull(constants$15._wsearchenv$MH,"_wsearchenv");
    }
    /**
     * {@snippet :
     * void _wsearchenv(const wchar_t* _Filename, const wchar_t* _VarName, wchar_t* _ResultPath);
     * }
     */
    public static void _wsearchenv(MemorySegment _Filename, MemorySegment _VarName, MemorySegment _ResultPath) {
        var mh$ = _wsearchenv$MH();
        try {
            mh$.invokeExact(_Filename, _VarName, _ResultPath);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wsystem$MH() {
        return RuntimeHelper.requireNonNull(constants$15._wsystem$MH,"_wsystem");
    }
    /**
     * {@snippet :
     * int _wsystem(const wchar_t* _Command);
     * }
     */
    public static int _wsystem(MemorySegment _Command) {
        var mh$ = _wsystem$MH();
        try {
            return (int)mh$.invokeExact(_Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _swab$MH() {
        return RuntimeHelper.requireNonNull(constants$15._swab$MH,"_swab");
    }
    /**
     * {@snippet :
     * void _swab(char* _Buf1, char* _Buf2, int _SizeInBytes);
     * }
     */
    public static void _swab(MemorySegment _Buf1, MemorySegment _Buf2, int _SizeInBytes) {
        var mh$ = _swab$MH();
        try {
            mh$.invokeExact(_Buf1, _Buf2, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle exit$MH() {
        return RuntimeHelper.requireNonNull(constants$15.exit$MH,"exit");
    }
    /**
     * {@snippet :
     * void exit(int _Code);
     * }
     */
    public static void exit(int _Code) {
        var mh$ = exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _exit$MH() {
        return RuntimeHelper.requireNonNull(constants$16._exit$MH,"_exit");
    }
    /**
     * {@snippet :
     * void _exit(int _Code);
     * }
     */
    public static void _exit(int _Code) {
        var mh$ = _exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _Exit$MH() {
        return RuntimeHelper.requireNonNull(constants$16._Exit$MH,"_Exit");
    }
    /**
     * {@snippet :
     * void _Exit(int _Code);
     * }
     */
    public static void _Exit(int _Code) {
        var mh$ = _Exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$16.quick_exit$MH,"quick_exit");
    }
    /**
     * {@snippet :
     * void quick_exit(int _Code);
     * }
     */
    public static void quick_exit(int _Code) {
        var mh$ = quick_exit$MH();
        try {
            mh$.invokeExact(_Code);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abort$MH() {
        return RuntimeHelper.requireNonNull(constants$16.abort$MH,"abort");
    }
    /**
     * {@snippet :
     * void abort();
     * }
     */
    public static void abort() {
        var mh$ = abort$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_abort_behavior$MH() {
        return RuntimeHelper.requireNonNull(constants$16._set_abort_behavior$MH,"_set_abort_behavior");
    }
    /**
     * {@snippet :
     * unsigned int _set_abort_behavior(unsigned int _Flags, unsigned int _Mask);
     * }
     */
    public static int _set_abort_behavior(int _Flags, int _Mask) {
        var mh$ = _set_abort_behavior$MH();
        try {
            return (int)mh$.invokeExact(_Flags, _Mask);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atexit$MH() {
        return RuntimeHelper.requireNonNull(constants$17.atexit$MH,"atexit");
    }
    /**
     * {@snippet :
     * int atexit(void (*)());
     * }
     */
    public static int atexit(MemorySegment x0) {
        var mh$ = atexit$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _onexit$MH() {
        return RuntimeHelper.requireNonNull(constants$17._onexit$MH,"_onexit");
    }
    /**
     * {@snippet :
     * _onexit_t _onexit(_onexit_t _Func);
     * }
     */
    public static MemorySegment _onexit(MemorySegment _Func) {
        var mh$ = _onexit$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle at_quick_exit$MH() {
        return RuntimeHelper.requireNonNull(constants$18.at_quick_exit$MH,"at_quick_exit");
    }
    /**
     * {@snippet :
     * int at_quick_exit(void (*)());
     * }
     */
    public static int at_quick_exit(MemorySegment x0) {
        var mh$ = at_quick_exit$MH();
        try {
            return (int)mh$.invokeExact(x0);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$19._set_purecall_handler$MH,"_set_purecall_handler");
    }
    /**
     * {@snippet :
     * _purecall_handler _set_purecall_handler(_purecall_handler _Handler);
     * }
     */
    public static MemorySegment _set_purecall_handler(MemorySegment _Handler) {
        var mh$ = _set_purecall_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_purecall_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$19._get_purecall_handler$MH,"_get_purecall_handler");
    }
    /**
     * {@snippet :
     * _purecall_handler _get_purecall_handler();
     * }
     */
    public static MemorySegment _get_purecall_handler() {
        var mh$ = _get_purecall_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$19._set_invalid_parameter_handler$MH,"_set_invalid_parameter_handler");
    }
    /**
     * {@snippet :
     * _invalid_parameter_handler _set_invalid_parameter_handler(_invalid_parameter_handler _Handler);
     * }
     */
    public static MemorySegment _set_invalid_parameter_handler(MemorySegment _Handler) {
        var mh$ = _set_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$19._get_invalid_parameter_handler$MH,"_get_invalid_parameter_handler");
    }
    /**
     * {@snippet :
     * _invalid_parameter_handler _get_invalid_parameter_handler();
     * }
     */
    public static MemorySegment _get_invalid_parameter_handler() {
        var mh$ = _get_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$19._set_thread_local_invalid_parameter_handler$MH,"_set_thread_local_invalid_parameter_handler");
    }
    /**
     * {@snippet :
     * _invalid_parameter_handler _set_thread_local_invalid_parameter_handler(_invalid_parameter_handler _Handler);
     * }
     */
    public static MemorySegment _set_thread_local_invalid_parameter_handler(MemorySegment _Handler) {
        var mh$ = _set_thread_local_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Handler);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_thread_local_invalid_parameter_handler$MH() {
        return RuntimeHelper.requireNonNull(constants$19._get_thread_local_invalid_parameter_handler$MH,"_get_thread_local_invalid_parameter_handler");
    }
    /**
     * {@snippet :
     * _invalid_parameter_handler _get_thread_local_invalid_parameter_handler();
     * }
     */
    public static MemorySegment _get_thread_local_invalid_parameter_handler() {
        var mh$ = _get_thread_local_invalid_parameter_handler$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_error_mode$MH() {
        return RuntimeHelper.requireNonNull(constants$20._set_error_mode$MH,"_set_error_mode");
    }
    /**
     * {@snippet :
     * int _set_error_mode(int _Mode);
     * }
     */
    public static int _set_error_mode(int _Mode) {
        var mh$ = _set_error_mode$MH();
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _errno$MH() {
        return RuntimeHelper.requireNonNull(constants$20._errno$MH,"_errno");
    }
    /**
     * {@snippet :
     * int* _errno();
     * }
     */
    public static MemorySegment _errno() {
        var mh$ = _errno$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$20._set_errno$MH,"_set_errno");
    }
    /**
     * {@snippet :
     * errno_t _set_errno(int _Value);
     * }
     */
    public static int _set_errno(int _Value) {
        var mh$ = _set_errno$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_errno$MH() {
        return RuntimeHelper.requireNonNull(constants$20._get_errno$MH,"_get_errno");
    }
    /**
     * {@snippet :
     * errno_t _get_errno(int* _Value);
     * }
     */
    public static int _get_errno(MemorySegment _Value) {
        var mh$ = _get_errno$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __doserrno$MH() {
        return RuntimeHelper.requireNonNull(constants$20.__doserrno$MH,"__doserrno");
    }
    /**
     * {@snippet :
     * unsigned long* __doserrno();
     * }
     */
    public static MemorySegment __doserrno() {
        var mh$ = __doserrno$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_doserrno$MH() {
        return RuntimeHelper.requireNonNull(constants$20._set_doserrno$MH,"_set_doserrno");
    }
    /**
     * {@snippet :
     * errno_t _set_doserrno(unsigned long _Value);
     * }
     */
    public static int _set_doserrno(int _Value) {
        var mh$ = _set_doserrno$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_doserrno$MH() {
        return RuntimeHelper.requireNonNull(constants$21._get_doserrno$MH,"_get_doserrno");
    }
    /**
     * {@snippet :
     * errno_t _get_doserrno(unsigned long* _Value);
     * }
     */
    public static int _get_doserrno(MemorySegment _Value) {
        var mh$ = _get_doserrno$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_errlist$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__sys_errlist$MH,"__sys_errlist");
    }
    /**
     * {@snippet :
     * char** __sys_errlist();
     * }
     */
    public static MemorySegment __sys_errlist() {
        var mh$ = __sys_errlist$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __sys_nerr$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__sys_nerr$MH,"__sys_nerr");
    }
    /**
     * {@snippet :
     * int* __sys_nerr();
     * }
     */
    public static MemorySegment __sys_nerr() {
        var mh$ = __sys_nerr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle perror$MH() {
        return RuntimeHelper.requireNonNull(constants$21.perror$MH,"perror");
    }
    /**
     * {@snippet :
     * void perror(char* _ErrMsg);
     * }
     */
    public static void perror(MemorySegment _ErrMsg) {
        var mh$ = perror$MH();
        try {
            mh$.invokeExact(_ErrMsg);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__p__pgmptr$MH,"__p__pgmptr");
    }
    /**
     * {@snippet :
     * char** __p__pgmptr();
     * }
     */
    public static MemorySegment __p__pgmptr() {
        var mh$ = __p__pgmptr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$21.__p__wpgmptr$MH,"__p__wpgmptr");
    }
    /**
     * {@snippet :
     * wchar_t** __p__wpgmptr();
     * }
     */
    public static MemorySegment __p__wpgmptr() {
        var mh$ = __p__wpgmptr$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$22.__p__fmode$MH,"__p__fmode");
    }
    /**
     * {@snippet :
     * int* __p__fmode();
     * }
     */
    public static MemorySegment __p__fmode() {
        var mh$ = __p__fmode$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_pgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$22._get_pgmptr$MH,"_get_pgmptr");
    }
    /**
     * {@snippet :
     * errno_t _get_pgmptr(char** _Value);
     * }
     */
    public static int _get_pgmptr(MemorySegment _Value) {
        var mh$ = _get_pgmptr$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_wpgmptr$MH() {
        return RuntimeHelper.requireNonNull(constants$22._get_wpgmptr$MH,"_get_wpgmptr");
    }
    /**
     * {@snippet :
     * errno_t _get_wpgmptr(wchar_t** _Value);
     * }
     */
    public static int _get_wpgmptr(MemorySegment _Value) {
        var mh$ = _get_wpgmptr$MH();
        try {
            return (int)mh$.invokeExact(_Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _set_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$22._set_fmode$MH,"_set_fmode");
    }
    /**
     * {@snippet :
     * errno_t _set_fmode(int _Mode);
     * }
     */
    public static int _set_fmode(int _Mode) {
        var mh$ = _set_fmode$MH();
        try {
            return (int)mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _get_fmode$MH() {
        return RuntimeHelper.requireNonNull(constants$22._get_fmode$MH,"_get_fmode");
    }
    /**
     * {@snippet :
     * errno_t _get_fmode(int* _PMode);
     * }
     */
    public static int _get_fmode(MemorySegment _PMode) {
        var mh$ = _get_fmode$MH();
        try {
            return (int)mh$.invokeExact(_PMode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle abs$MH() {
        return RuntimeHelper.requireNonNull(constants$22.abs$MH,"abs");
    }
    /**
     * {@snippet :
     * int abs(int _Number);
     * }
     */
    public static int abs(int _Number) {
        var mh$ = abs$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle labs$MH() {
        return RuntimeHelper.requireNonNull(constants$23.labs$MH,"labs");
    }
    /**
     * {@snippet :
     * long labs(long _Number);
     * }
     */
    public static int labs(int _Number) {
        var mh$ = labs$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle llabs$MH() {
        return RuntimeHelper.requireNonNull(constants$23.llabs$MH,"llabs");
    }
    /**
     * {@snippet :
     * long long llabs(long long _Number);
     * }
     */
    public static long llabs(long _Number) {
        var mh$ = llabs$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _abs64$MH() {
        return RuntimeHelper.requireNonNull(constants$23._abs64$MH,"_abs64");
    }
    /**
     * {@snippet :
     * long long _abs64(long long _Number);
     * }
     */
    public static long _abs64(long _Number) {
        var mh$ = _abs64$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ushort$MH() {
        return RuntimeHelper.requireNonNull(constants$23._byteswap_ushort$MH,"_byteswap_ushort");
    }
    /**
     * {@snippet :
     * unsigned short _byteswap_ushort(unsigned short _Number);
     * }
     */
    public static short _byteswap_ushort(short _Number) {
        var mh$ = _byteswap_ushort$MH();
        try {
            return (short)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_ulong$MH() {
        return RuntimeHelper.requireNonNull(constants$23._byteswap_ulong$MH,"_byteswap_ulong");
    }
    /**
     * {@snippet :
     * unsigned long _byteswap_ulong(unsigned long _Number);
     * }
     */
    public static int _byteswap_ulong(int _Number) {
        var mh$ = _byteswap_ulong$MH();
        try {
            return (int)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _byteswap_uint64$MH() {
        return RuntimeHelper.requireNonNull(constants$23._byteswap_uint64$MH,"_byteswap_uint64");
    }
    /**
     * {@snippet :
     * unsigned long long _byteswap_uint64(unsigned long long _Number);
     * }
     */
    public static long _byteswap_uint64(long _Number) {
        var mh$ = _byteswap_uint64$MH();
        try {
            return (long)mh$.invokeExact(_Number);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle div$MH() {
        return RuntimeHelper.requireNonNull(constants$24.div$MH,"div");
    }
    /**
     * {@snippet :
     * div_t div(int _Numerator, int _Denominator);
     * }
     */
    public static MemorySegment div(SegmentAllocator allocator, int _Numerator, int _Denominator) {
        var mh$ = div$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$24.ldiv$MH,"ldiv");
    }
    /**
     * {@snippet :
     * ldiv_t ldiv(long _Numerator, long _Denominator);
     * }
     */
    public static MemorySegment ldiv(SegmentAllocator allocator, int _Numerator, int _Denominator) {
        var mh$ = ldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle lldiv$MH() {
        return RuntimeHelper.requireNonNull(constants$24.lldiv$MH,"lldiv");
    }
    /**
     * {@snippet :
     * lldiv_t lldiv(long long _Numerator, long long _Denominator);
     * }
     */
    public static MemorySegment lldiv(SegmentAllocator allocator, long _Numerator, long _Denominator) {
        var mh$ = lldiv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, _Numerator, _Denominator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rotl$MH() {
        return RuntimeHelper.requireNonNull(constants$24._rotl$MH,"_rotl");
    }
    /**
     * {@snippet :
     * unsigned int _rotl(unsigned int _Value, int _Shift);
     * }
     */
    public static int _rotl(int _Value, int _Shift) {
        var mh$ = _rotl$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lrotl$MH() {
        return RuntimeHelper.requireNonNull(constants$24._lrotl$MH,"_lrotl");
    }
    /**
     * {@snippet :
     * unsigned long _lrotl(unsigned long _Value, int _Shift);
     * }
     */
    public static int _lrotl(int _Value, int _Shift) {
        var mh$ = _lrotl$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rotl64$MH() {
        return RuntimeHelper.requireNonNull(constants$24._rotl64$MH,"_rotl64");
    }
    /**
     * {@snippet :
     * unsigned long long _rotl64(unsigned long long _Value, int _Shift);
     * }
     */
    public static long _rotl64(long _Value, int _Shift) {
        var mh$ = _rotl64$MH();
        try {
            return (long)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rotr$MH() {
        return RuntimeHelper.requireNonNull(constants$25._rotr$MH,"_rotr");
    }
    /**
     * {@snippet :
     * unsigned int _rotr(unsigned int _Value, int _Shift);
     * }
     */
    public static int _rotr(int _Value, int _Shift) {
        var mh$ = _rotr$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _lrotr$MH() {
        return RuntimeHelper.requireNonNull(constants$25._lrotr$MH,"_lrotr");
    }
    /**
     * {@snippet :
     * unsigned long _lrotr(unsigned long _Value, int _Shift);
     * }
     */
    public static int _lrotr(int _Value, int _Shift) {
        var mh$ = _lrotr$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _rotr64$MH() {
        return RuntimeHelper.requireNonNull(constants$25._rotr64$MH,"_rotr64");
    }
    /**
     * {@snippet :
     * unsigned long long _rotr64(unsigned long long _Value, int _Shift);
     * }
     */
    public static long _rotr64(long _Value, int _Shift) {
        var mh$ = _rotr64$MH();
        try {
            return (long)mh$.invokeExact(_Value, _Shift);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle srand$MH() {
        return RuntimeHelper.requireNonNull(constants$25.srand$MH,"srand");
    }
    /**
     * {@snippet :
     * void srand(unsigned int _Seed);
     * }
     */
    public static void srand(int _Seed) {
        var mh$ = srand$MH();
        try {
            mh$.invokeExact(_Seed);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle rand$MH() {
        return RuntimeHelper.requireNonNull(constants$25.rand$MH,"rand");
    }
    /**
     * {@snippet :
     * int rand();
     * }
     */
    public static int rand() {
        var mh$ = rand$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atof$MH() {
        return RuntimeHelper.requireNonNull(constants$25.atof$MH,"atof");
    }
    /**
     * {@snippet :
     * double atof(char* _String);
     * }
     */
    public static double atof(MemorySegment _String) {
        var mh$ = atof$MH();
        try {
            return (double)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoi$MH() {
        return RuntimeHelper.requireNonNull(constants$26.atoi$MH,"atoi");
    }
    /**
     * {@snippet :
     * int atoi(char* _String);
     * }
     */
    public static int atoi(MemorySegment _String) {
        var mh$ = atoi$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atol$MH() {
        return RuntimeHelper.requireNonNull(constants$26.atol$MH,"atol");
    }
    /**
     * {@snippet :
     * long atol(char* _String);
     * }
     */
    public static int atol(MemorySegment _String) {
        var mh$ = atol$MH();
        try {
            return (int)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle atoll$MH() {
        return RuntimeHelper.requireNonNull(constants$26.atoll$MH,"atoll");
    }
    /**
     * {@snippet :
     * long long atoll(char* _String);
     * }
     */
    public static long atoll(MemorySegment _String) {
        var mh$ = atoll$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$26._atoi64$MH,"_atoi64");
    }
    /**
     * {@snippet :
     * long long _atoi64(char* _String);
     * }
     */
    public static long _atoi64(MemorySegment _String) {
        var mh$ = _atoi64$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$26._atof_l$MH,"_atof_l");
    }
    /**
     * {@snippet :
     * double _atof_l(char* _String, _locale_t _Locale);
     * }
     */
    public static double _atof_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atof_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi_l$MH() {
        return RuntimeHelper.requireNonNull(constants$26._atoi_l$MH,"_atoi_l");
    }
    /**
     * {@snippet :
     * int _atoi_l(char* _String, _locale_t _Locale);
     * }
     */
    public static int _atoi_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoi_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$27._atol_l$MH,"_atol_l");
    }
    /**
     * {@snippet :
     * long _atol_l(char* _String, _locale_t _Locale);
     * }
     */
    public static int _atol_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$27._atoll_l$MH,"_atoll_l");
    }
    /**
     * {@snippet :
     * long long _atoll_l(char* _String, _locale_t _Locale);
     * }
     */
    public static long _atoll_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$27._atoi64_l$MH,"_atoi64_l");
    }
    /**
     * {@snippet :
     * long long _atoi64_l(char* _String, _locale_t _Locale);
     * }
     */
    public static long _atoi64_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt$MH() {
        return RuntimeHelper.requireNonNull(constants$27._atoflt$MH,"_atoflt");
    }
    /**
     * {@snippet :
     * int _atoflt(_CRT_FLOAT* _Result, char* _String);
     * }
     */
    public static int _atoflt(MemorySegment _Result, MemorySegment _String) {
        var mh$ = _atoflt$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl$MH() {
        return RuntimeHelper.requireNonNull(constants$27._atodbl$MH,"_atodbl");
    }
    /**
     * {@snippet :
     * int _atodbl(_CRT_DOUBLE* _Result, char* _String);
     * }
     */
    public static int _atodbl(MemorySegment _Result, MemorySegment _String) {
        var mh$ = _atodbl$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl$MH() {
        return RuntimeHelper.requireNonNull(constants$27._atoldbl$MH,"_atoldbl");
    }
    /**
     * {@snippet :
     * int _atoldbl(_LDOUBLE* _Result, char* _String);
     * }
     */
    public static int _atoldbl(MemorySegment _Result, MemorySegment _String) {
        var mh$ = _atoldbl$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoflt_l$MH() {
        return RuntimeHelper.requireNonNull(constants$28._atoflt_l$MH,"_atoflt_l");
    }
    /**
     * {@snippet :
     * int _atoflt_l(_CRT_FLOAT* _Result, char* _String, _locale_t _Locale);
     * }
     */
    public static int _atoflt_l(MemorySegment _Result, MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoflt_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atodbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$28._atodbl_l$MH,"_atodbl_l");
    }
    /**
     * {@snippet :
     * int _atodbl_l(_CRT_DOUBLE* _Result, char* _String, _locale_t _Locale);
     * }
     */
    public static int _atodbl_l(MemorySegment _Result, MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atodbl_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _atoldbl_l$MH() {
        return RuntimeHelper.requireNonNull(constants$28._atoldbl_l$MH,"_atoldbl_l");
    }
    /**
     * {@snippet :
     * int _atoldbl_l(_LDOUBLE* _Result, char* _String, _locale_t _Locale);
     * }
     */
    public static int _atoldbl_l(MemorySegment _Result, MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _atoldbl_l$MH();
        try {
            return (int)mh$.invokeExact(_Result, _String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtof$MH() {
        return RuntimeHelper.requireNonNull(constants$28.strtof$MH,"strtof");
    }
    /**
     * {@snippet :
     * float strtof(char* _String, char** _EndPtr);
     * }
     */
    public static float strtof(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = strtof$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtof_l$MH() {
        return RuntimeHelper.requireNonNull(constants$28._strtof_l$MH,"_strtof_l");
    }
    /**
     * {@snippet :
     * float _strtof_l(char* _String, char** _EndPtr, _locale_t _Locale);
     * }
     */
    public static float _strtof_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _strtof_l$MH();
        try {
            return (float)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtod$MH() {
        return RuntimeHelper.requireNonNull(constants$28.strtod$MH,"strtod");
    }
    /**
     * {@snippet :
     * double strtod(char* _String, char** _EndPtr);
     * }
     */
    public static double strtod(MemorySegment _String, MemorySegment _EndPtr) {
        var mh$ = strtod$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtod_l$MH() {
        return RuntimeHelper.requireNonNull(constants$29._strtod_l$MH,"_strtod_l");
    }
    /**
     * {@snippet :
     * double _strtod_l(char* _String, char** _EndPtr, _locale_t _Locale);
     * }
     */
    public static double _strtod_l(MemorySegment _String, MemorySegment _EndPtr, MemorySegment _Locale) {
        var mh$ = _strtod_l$MH();
        try {
            return (double)mh$.invokeExact(_String, _EndPtr, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtol$MH() {
        return RuntimeHelper.requireNonNull(constants$29.strtol$MH,"strtol");
    }
    /**
     * {@snippet :
     * long strtol(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static int strtol(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = strtol$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtol_l$MH() {
        return RuntimeHelper.requireNonNull(constants$29._strtol_l$MH,"_strtol_l");
    }
    /**
     * {@snippet :
     * long _strtol_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static int _strtol_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtol_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoll$MH() {
        return RuntimeHelper.requireNonNull(constants$29.strtoll$MH,"strtoll");
    }
    /**
     * {@snippet :
     * long long strtoll(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static long strtoll(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = strtoll$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoll_l$MH() {
        return RuntimeHelper.requireNonNull(constants$29._strtoll_l$MH,"_strtoll_l");
    }
    /**
     * {@snippet :
     * long long _strtoll_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _strtoll_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoll_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoul$MH() {
        return RuntimeHelper.requireNonNull(constants$29.strtoul$MH,"strtoul");
    }
    /**
     * {@snippet :
     * unsigned long strtoul(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static int strtoul(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = strtoul$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoul_l$MH() {
        return RuntimeHelper.requireNonNull(constants$30._strtoul_l$MH,"_strtoul_l");
    }
    /**
     * {@snippet :
     * unsigned long _strtoul_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static int _strtoul_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoul_l$MH();
        try {
            return (int)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle strtoull$MH() {
        return RuntimeHelper.requireNonNull(constants$30.strtoull$MH,"strtoull");
    }
    /**
     * {@snippet :
     * unsigned long long strtoull(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static long strtoull(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = strtoull$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoull_l$MH() {
        return RuntimeHelper.requireNonNull(constants$30._strtoull_l$MH,"_strtoull_l");
    }
    /**
     * {@snippet :
     * unsigned long long _strtoull_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _strtoull_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoull_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoi64$MH() {
        return RuntimeHelper.requireNonNull(constants$30._strtoi64$MH,"_strtoi64");
    }
    /**
     * {@snippet :
     * long long _strtoi64(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static long _strtoi64(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = _strtoi64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoi64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$30._strtoi64_l$MH,"_strtoi64_l");
    }
    /**
     * {@snippet :
     * long long _strtoi64_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _strtoi64_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoi64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoui64$MH() {
        return RuntimeHelper.requireNonNull(constants$30._strtoui64$MH,"_strtoui64");
    }
    /**
     * {@snippet :
     * unsigned long long _strtoui64(char* _String, char** _EndPtr, int _Radix);
     * }
     */
    public static long _strtoui64(MemorySegment _String, MemorySegment _EndPtr, int _Radix) {
        var mh$ = _strtoui64$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _strtoui64_l$MH() {
        return RuntimeHelper.requireNonNull(constants$31._strtoui64_l$MH,"_strtoui64_l");
    }
    /**
     * {@snippet :
     * unsigned long long _strtoui64_l(char* _String, char** _EndPtr, int _Radix, _locale_t _Locale);
     * }
     */
    public static long _strtoui64_l(MemorySegment _String, MemorySegment _EndPtr, int _Radix, MemorySegment _Locale) {
        var mh$ = _strtoui64_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _EndPtr, _Radix, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$31._itoa_s$MH,"_itoa_s");
    }
    /**
     * {@snippet :
     * errno_t _itoa_s(int _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _itoa_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _itoa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _itoa$MH() {
        return RuntimeHelper.requireNonNull(constants$31._itoa$MH,"_itoa");
    }
    /**
     * {@snippet :
     * char* _itoa(int _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _itoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _itoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$31._ltoa_s$MH,"_ltoa_s");
    }
    /**
     * {@snippet :
     * errno_t _ltoa_s(long _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ltoa_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ltoa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ltoa$MH() {
        return RuntimeHelper.requireNonNull(constants$31._ltoa$MH,"_ltoa");
    }
    /**
     * {@snippet :
     * char* _ltoa(long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ltoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ltoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultoa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$31._ultoa_s$MH,"_ultoa_s");
    }
    /**
     * {@snippet :
     * errno_t _ultoa_s(unsigned long _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ultoa_s(int _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ultoa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ultoa$MH() {
        return RuntimeHelper.requireNonNull(constants$32._ultoa$MH,"_ultoa");
    }
    /**
     * {@snippet :
     * char* _ultoa(unsigned long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ultoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ultoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64toa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$32._i64toa_s$MH,"_i64toa_s");
    }
    /**
     * {@snippet :
     * errno_t _i64toa_s(long long _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _i64toa_s(long _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _i64toa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _i64toa$MH() {
        return RuntimeHelper.requireNonNull(constants$32._i64toa$MH,"_i64toa");
    }
    /**
     * {@snippet :
     * char* _i64toa(long long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _i64toa(long _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _i64toa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64toa_s$MH() {
        return RuntimeHelper.requireNonNull(constants$32._ui64toa_s$MH,"_ui64toa_s");
    }
    /**
     * {@snippet :
     * errno_t _ui64toa_s(unsigned long long _Value, char* _Buffer, size_t _BufferCount, int _Radix);
     * }
     */
    public static int _ui64toa_s(long _Value, MemorySegment _Buffer, long _BufferCount, int _Radix) {
        var mh$ = _ui64toa_s$MH();
        try {
            return (int)mh$.invokeExact(_Value, _Buffer, _BufferCount, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ui64toa$MH() {
        return RuntimeHelper.requireNonNull(constants$32._ui64toa$MH,"_ui64toa");
    }
    /**
     * {@snippet :
     * char* _ui64toa(unsigned long long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment _ui64toa(long _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = _ui64toa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ecvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$32._ecvt_s$MH,"_ecvt_s");
    }
    /**
     * {@snippet :
     * errno_t _ecvt_s(char* _Buffer, size_t _BufferCount, double _Value, int _DigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static int _ecvt_s(MemorySegment _Buffer, long _BufferCount, double _Value, int _DigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = _ecvt_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _ecvt$MH() {
        return RuntimeHelper.requireNonNull(constants$33._ecvt$MH,"_ecvt");
    }
    /**
     * {@snippet :
     * char* _ecvt(double _Value, int _DigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static MemorySegment _ecvt(double _Value, int _DigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = _ecvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$33._fcvt_s$MH,"_fcvt_s");
    }
    /**
     * {@snippet :
     * errno_t _fcvt_s(char* _Buffer, size_t _BufferCount, double _Value, int _FractionalDigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static int _fcvt_s(MemorySegment _Buffer, long _BufferCount, double _Value, int _FractionalDigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = _fcvt_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$33._fcvt$MH,"_fcvt");
    }
    /**
     * {@snippet :
     * char* _fcvt(double _Value, int _FractionalDigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static MemorySegment _fcvt(double _Value, int _FractionalDigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = _fcvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gcvt_s$MH() {
        return RuntimeHelper.requireNonNull(constants$33._gcvt_s$MH,"_gcvt_s");
    }
    /**
     * {@snippet :
     * errno_t _gcvt_s(char* _Buffer, size_t _BufferCount, double _Value, int _DigitCount);
     * }
     */
    public static int _gcvt_s(MemorySegment _Buffer, long _BufferCount, double _Value, int _DigitCount) {
        var mh$ = _gcvt_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Value, _DigitCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _gcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$33._gcvt$MH,"_gcvt");
    }
    /**
     * {@snippet :
     * char* _gcvt(double _Value, int _DigitCount, char* _Buffer);
     * }
     */
    public static MemorySegment _gcvt(double _Value, int _DigitCount, MemorySegment _Buffer) {
        var mh$ = _gcvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _DigitCount, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ___mb_cur_max_func$MH() {
        return RuntimeHelper.requireNonNull(constants$33.___mb_cur_max_func$MH,"___mb_cur_max_func");
    }
    /**
     * {@snippet :
     * int ___mb_cur_max_func();
     * }
     */
    public static int ___mb_cur_max_func() {
        var mh$ = ___mb_cur_max_func$MH();
        try {
            return (int)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ___mb_cur_max_l_func$MH() {
        return RuntimeHelper.requireNonNull(constants$34.___mb_cur_max_l_func$MH,"___mb_cur_max_l_func");
    }
    /**
     * {@snippet :
     * int ___mb_cur_max_l_func(_locale_t _Locale);
     * }
     */
    public static int ___mb_cur_max_l_func(MemorySegment _Locale) {
        var mh$ = ___mb_cur_max_l_func$MH();
        try {
            return (int)mh$.invokeExact(_Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mblen$MH() {
        return RuntimeHelper.requireNonNull(constants$34.mblen$MH,"mblen");
    }
    /**
     * {@snippet :
     * int mblen(char* _Ch, size_t _MaxCount);
     * }
     */
    public static int mblen(MemorySegment _Ch, long _MaxCount) {
        var mh$ = mblen$MH();
        try {
            return (int)mh$.invokeExact(_Ch, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mblen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$34._mblen_l$MH,"_mblen_l");
    }
    /**
     * {@snippet :
     * int _mblen_l(char* _Ch, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static int _mblen_l(MemorySegment _Ch, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _mblen_l$MH();
        try {
            return (int)mh$.invokeExact(_Ch, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrlen$MH() {
        return RuntimeHelper.requireNonNull(constants$34._mbstrlen$MH,"_mbstrlen");
    }
    /**
     * {@snippet :
     * size_t _mbstrlen(char* _String);
     * }
     */
    public static long _mbstrlen(MemorySegment _String) {
        var mh$ = _mbstrlen$MH();
        try {
            return (long)mh$.invokeExact(_String);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrlen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$34._mbstrlen_l$MH,"_mbstrlen_l");
    }
    /**
     * {@snippet :
     * size_t _mbstrlen_l(char* _String, _locale_t _Locale);
     * }
     */
    public static long _mbstrlen_l(MemorySegment _String, MemorySegment _Locale) {
        var mh$ = _mbstrlen_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrnlen$MH() {
        return RuntimeHelper.requireNonNull(constants$34._mbstrnlen$MH,"_mbstrnlen");
    }
    /**
     * {@snippet :
     * size_t _mbstrnlen(char* _String, size_t _MaxCount);
     * }
     */
    public static long _mbstrnlen(MemorySegment _String, long _MaxCount) {
        var mh$ = _mbstrnlen$MH();
        try {
            return (long)mh$.invokeExact(_String, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstrnlen_l$MH() {
        return RuntimeHelper.requireNonNull(constants$35._mbstrnlen_l$MH,"_mbstrnlen_l");
    }
    /**
     * {@snippet :
     * size_t _mbstrnlen_l(char* _String, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static long _mbstrnlen_l(MemorySegment _String, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _mbstrnlen_l$MH();
        try {
            return (long)mh$.invokeExact(_String, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbtowc$MH() {
        return RuntimeHelper.requireNonNull(constants$35.mbtowc$MH,"mbtowc");
    }
    /**
     * {@snippet :
     * int mbtowc(wchar_t* _DstCh, char* _SrcCh, size_t _SrcSizeInBytes);
     * }
     */
    public static int mbtowc(MemorySegment _DstCh, MemorySegment _SrcCh, long _SrcSizeInBytes) {
        var mh$ = mbtowc$MH();
        try {
            return (int)mh$.invokeExact(_DstCh, _SrcCh, _SrcSizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbtowc_l$MH() {
        return RuntimeHelper.requireNonNull(constants$35._mbtowc_l$MH,"_mbtowc_l");
    }
    /**
     * {@snippet :
     * int _mbtowc_l(wchar_t* _DstCh, char* _SrcCh, size_t _SrcSizeInBytes, _locale_t _Locale);
     * }
     */
    public static int _mbtowc_l(MemorySegment _DstCh, MemorySegment _SrcCh, long _SrcSizeInBytes, MemorySegment _Locale) {
        var mh$ = _mbtowc_l$MH();
        try {
            return (int)mh$.invokeExact(_DstCh, _SrcCh, _SrcSizeInBytes, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbstowcs_s$MH() {
        return RuntimeHelper.requireNonNull(constants$35.mbstowcs_s$MH,"mbstowcs_s");
    }
    /**
     * {@snippet :
     * errno_t mbstowcs_s(size_t* _PtNumOfCharConverted, wchar_t* _DstBuf, size_t _SizeInWords, char* _SrcBuf, size_t _MaxCount);
     * }
     */
    public static int mbstowcs_s(MemorySegment _PtNumOfCharConverted, MemorySegment _DstBuf, long _SizeInWords, MemorySegment _SrcBuf, long _MaxCount) {
        var mh$ = mbstowcs_s$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _DstBuf, _SizeInWords, _SrcBuf, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle mbstowcs$MH() {
        return RuntimeHelper.requireNonNull(constants$35.mbstowcs$MH,"mbstowcs");
    }
    /**
     * {@snippet :
     * size_t mbstowcs(wchar_t* _Dest, char* _Source, size_t _MaxCount);
     * }
     */
    public static long mbstowcs(MemorySegment _Dest, MemorySegment _Source, long _MaxCount) {
        var mh$ = mbstowcs$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstowcs_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$35._mbstowcs_s_l$MH,"_mbstowcs_s_l");
    }
    /**
     * {@snippet :
     * errno_t _mbstowcs_s_l(size_t* _PtNumOfCharConverted, wchar_t* _DstBuf, size_t _SizeInWords, char* _SrcBuf, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static int _mbstowcs_s_l(MemorySegment _PtNumOfCharConverted, MemorySegment _DstBuf, long _SizeInWords, MemorySegment _SrcBuf, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _mbstowcs_s_l$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _DstBuf, _SizeInWords, _SrcBuf, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _mbstowcs_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._mbstowcs_l$MH,"_mbstowcs_l");
    }
    /**
     * {@snippet :
     * size_t _mbstowcs_l(wchar_t* _Dest, char* _Source, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static long _mbstowcs_l(MemorySegment _Dest, MemorySegment _Source, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _mbstowcs_l$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wctomb$MH() {
        return RuntimeHelper.requireNonNull(constants$36.wctomb$MH,"wctomb");
    }
    /**
     * {@snippet :
     * int wctomb(char* _MbCh, wchar_t _WCh);
     * }
     */
    public static int wctomb(MemorySegment _MbCh, short _WCh) {
        var mh$ = wctomb$MH();
        try {
            return (int)mh$.invokeExact(_MbCh, _WCh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctomb_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._wctomb_l$MH,"_wctomb_l");
    }
    /**
     * {@snippet :
     * int _wctomb_l(char* _MbCh, wchar_t _WCh, _locale_t _Locale);
     * }
     */
    public static int _wctomb_l(MemorySegment _MbCh, short _WCh, MemorySegment _Locale) {
        var mh$ = _wctomb_l$MH();
        try {
            return (int)mh$.invokeExact(_MbCh, _WCh, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wctomb_s$MH() {
        return RuntimeHelper.requireNonNull(constants$36.wctomb_s$MH,"wctomb_s");
    }
    /**
     * {@snippet :
     * errno_t wctomb_s(int* _SizeConverted, char* _MbCh, rsize_t _SizeInBytes, wchar_t _WCh);
     * }
     */
    public static int wctomb_s(MemorySegment _SizeConverted, MemorySegment _MbCh, long _SizeInBytes, short _WCh) {
        var mh$ = wctomb_s$MH();
        try {
            return (int)mh$.invokeExact(_SizeConverted, _MbCh, _SizeInBytes, _WCh);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wctomb_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$36._wctomb_s_l$MH,"_wctomb_s_l");
    }
    /**
     * {@snippet :
     * errno_t _wctomb_s_l(int* _SizeConverted, char* _MbCh, size_t _SizeInBytes, wchar_t _WCh, _locale_t _Locale);
     * }
     */
    public static int _wctomb_s_l(MemorySegment _SizeConverted, MemorySegment _MbCh, long _SizeInBytes, short _WCh, MemorySegment _Locale) {
        var mh$ = _wctomb_s_l$MH();
        try {
            return (int)mh$.invokeExact(_SizeConverted, _MbCh, _SizeInBytes, _WCh, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstombs_s$MH() {
        return RuntimeHelper.requireNonNull(constants$36.wcstombs_s$MH,"wcstombs_s");
    }
    /**
     * {@snippet :
     * errno_t wcstombs_s(size_t* _PtNumOfCharConverted, char* _Dst, size_t _DstSizeInBytes, const wchar_t* _Src, size_t _MaxCountInBytes);
     * }
     */
    public static int wcstombs_s(MemorySegment _PtNumOfCharConverted, MemorySegment _Dst, long _DstSizeInBytes, MemorySegment _Src, long _MaxCountInBytes) {
        var mh$ = wcstombs_s$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _Dst, _DstSizeInBytes, _Src, _MaxCountInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle wcstombs$MH() {
        return RuntimeHelper.requireNonNull(constants$37.wcstombs$MH,"wcstombs");
    }
    /**
     * {@snippet :
     * size_t wcstombs(char* _Dest, const wchar_t* _Source, size_t _MaxCount);
     * }
     */
    public static long wcstombs(MemorySegment _Dest, MemorySegment _Source, long _MaxCount) {
        var mh$ = wcstombs$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstombs_s_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._wcstombs_s_l$MH,"_wcstombs_s_l");
    }
    /**
     * {@snippet :
     * errno_t _wcstombs_s_l(size_t* _PtNumOfCharConverted, char* _Dst, size_t _DstSizeInBytes, const wchar_t* _Src, size_t _MaxCountInBytes, _locale_t _Locale);
     * }
     */
    public static int _wcstombs_s_l(MemorySegment _PtNumOfCharConverted, MemorySegment _Dst, long _DstSizeInBytes, MemorySegment _Src, long _MaxCountInBytes, MemorySegment _Locale) {
        var mh$ = _wcstombs_s_l$MH();
        try {
            return (int)mh$.invokeExact(_PtNumOfCharConverted, _Dst, _DstSizeInBytes, _Src, _MaxCountInBytes, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _wcstombs_l$MH() {
        return RuntimeHelper.requireNonNull(constants$37._wcstombs_l$MH,"_wcstombs_l");
    }
    /**
     * {@snippet :
     * size_t _wcstombs_l(char* _Dest, const wchar_t* _Source, size_t _MaxCount, _locale_t _Locale);
     * }
     */
    public static long _wcstombs_l(MemorySegment _Dest, MemorySegment _Source, long _MaxCount, MemorySegment _Locale) {
        var mh$ = _wcstombs_l$MH();
        try {
            return (long)mh$.invokeExact(_Dest, _Source, _MaxCount, _Locale);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _fullpath$MH() {
        return RuntimeHelper.requireNonNull(constants$37._fullpath$MH,"_fullpath");
    }
    /**
     * {@snippet :
     * char* _fullpath(char* _Buffer, char* _Path, size_t _BufferCount);
     * }
     */
    public static MemorySegment _fullpath(MemorySegment _Buffer, MemorySegment _Path, long _BufferCount) {
        var mh$ = _fullpath$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Buffer, _Path, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _makepath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$37._makepath_s$MH,"_makepath_s");
    }
    /**
     * {@snippet :
     * errno_t _makepath_s(char* _Buffer, size_t _BufferCount, char* _Drive, char* _Dir, char* _Filename, char* _Ext);
     * }
     */
    public static int _makepath_s(MemorySegment _Buffer, long _BufferCount, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _makepath_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _makepath$MH() {
        return RuntimeHelper.requireNonNull(constants$37._makepath$MH,"_makepath");
    }
    /**
     * {@snippet :
     * void _makepath(char* _Buffer, char* _Drive, char* _Dir, char* _Filename, char* _Ext);
     * }
     */
    public static void _makepath(MemorySegment _Buffer, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _makepath$MH();
        try {
            mh$.invokeExact(_Buffer, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _splitpath$MH() {
        return RuntimeHelper.requireNonNull(constants$38._splitpath$MH,"_splitpath");
    }
    /**
     * {@snippet :
     * void _splitpath(char* _FullPath, char* _Drive, char* _Dir, char* _Filename, char* _Ext);
     * }
     */
    public static void _splitpath(MemorySegment _FullPath, MemorySegment _Drive, MemorySegment _Dir, MemorySegment _Filename, MemorySegment _Ext) {
        var mh$ = _splitpath$MH();
        try {
            mh$.invokeExact(_FullPath, _Drive, _Dir, _Filename, _Ext);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _splitpath_s$MH() {
        return RuntimeHelper.requireNonNull(constants$38._splitpath_s$MH,"_splitpath_s");
    }
    /**
     * {@snippet :
     * errno_t _splitpath_s(char* _FullPath, char* _Drive, size_t _DriveCount, char* _Dir, size_t _DirCount, char* _Filename, size_t _FilenameCount, char* _Ext, size_t _ExtCount);
     * }
     */
    public static int _splitpath_s(MemorySegment _FullPath, MemorySegment _Drive, long _DriveCount, MemorySegment _Dir, long _DirCount, MemorySegment _Filename, long _FilenameCount, MemorySegment _Ext, long _ExtCount) {
        var mh$ = _splitpath_s$MH();
        try {
            return (int)mh$.invokeExact(_FullPath, _Drive, _DriveCount, _Dir, _DirCount, _Filename, _FilenameCount, _Ext, _ExtCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$38.getenv_s$MH,"getenv_s");
    }
    /**
     * {@snippet :
     * errno_t getenv_s(size_t* _RequiredCount, char* _Buffer, rsize_t _BufferCount, char* _VarName);
     * }
     */
    public static int getenv_s(MemorySegment _RequiredCount, MemorySegment _Buffer, long _BufferCount, MemorySegment _VarName) {
        var mh$ = getenv_s$MH();
        try {
            return (int)mh$.invokeExact(_RequiredCount, _Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___argc$MH() {
        return RuntimeHelper.requireNonNull(constants$38.__p___argc$MH,"__p___argc");
    }
    /**
     * {@snippet :
     * int* __p___argc();
     * }
     */
    public static MemorySegment __p___argc() {
        var mh$ = __p___argc$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___argv$MH() {
        return RuntimeHelper.requireNonNull(constants$38.__p___argv$MH,"__p___argv");
    }
    /**
     * {@snippet :
     * char*** __p___argv();
     * }
     */
    public static MemorySegment __p___argv() {
        var mh$ = __p___argv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p___wargv$MH() {
        return RuntimeHelper.requireNonNull(constants$38.__p___wargv$MH,"__p___wargv");
    }
    /**
     * {@snippet :
     * wchar_t*** __p___wargv();
     * }
     */
    public static MemorySegment __p___wargv() {
        var mh$ = __p___wargv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__environ$MH() {
        return RuntimeHelper.requireNonNull(constants$39.__p__environ$MH,"__p__environ");
    }
    /**
     * {@snippet :
     * char*** __p__environ();
     * }
     */
    public static MemorySegment __p__environ() {
        var mh$ = __p__environ$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle __p__wenviron$MH() {
        return RuntimeHelper.requireNonNull(constants$39.__p__wenviron$MH,"__p__wenviron");
    }
    /**
     * {@snippet :
     * wchar_t*** __p__wenviron();
     * }
     */
    public static MemorySegment __p__wenviron() {
        var mh$ = __p__wenviron$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle getenv$MH() {
        return RuntimeHelper.requireNonNull(constants$39.getenv$MH,"getenv");
    }
    /**
     * {@snippet :
     * char* getenv(char* _VarName);
     * }
     */
    public static MemorySegment getenv(MemorySegment _VarName) {
        var mh$ = getenv$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _dupenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$39._dupenv_s$MH,"_dupenv_s");
    }
    /**
     * {@snippet :
     * errno_t _dupenv_s(char** _Buffer, size_t* _BufferCount, char* _VarName);
     * }
     */
    public static int _dupenv_s(MemorySegment _Buffer, MemorySegment _BufferCount, MemorySegment _VarName) {
        var mh$ = _dupenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Buffer, _BufferCount, _VarName);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle system$MH() {
        return RuntimeHelper.requireNonNull(constants$39.system$MH,"system");
    }
    /**
     * {@snippet :
     * int system(char* _Command);
     * }
     */
    public static int system(MemorySegment _Command) {
        var mh$ = system$MH();
        try {
            return (int)mh$.invokeExact(_Command);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putenv$MH() {
        return RuntimeHelper.requireNonNull(constants$39._putenv$MH,"_putenv");
    }
    /**
     * {@snippet :
     * int _putenv(char* _EnvString);
     * }
     */
    public static int _putenv(MemorySegment _EnvString) {
        var mh$ = _putenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _putenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$40._putenv_s$MH,"_putenv_s");
    }
    /**
     * {@snippet :
     * errno_t _putenv_s(char* _Name, char* _Value);
     * }
     */
    public static int _putenv_s(MemorySegment _Name, MemorySegment _Value) {
        var mh$ = _putenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Name, _Value);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _searchenv_s$MH() {
        return RuntimeHelper.requireNonNull(constants$40._searchenv_s$MH,"_searchenv_s");
    }
    /**
     * {@snippet :
     * errno_t _searchenv_s(char* _Filename, char* _VarName, char* _Buffer, size_t _BufferCount);
     * }
     */
    public static int _searchenv_s(MemorySegment _Filename, MemorySegment _VarName, MemorySegment _Buffer, long _BufferCount) {
        var mh$ = _searchenv_s$MH();
        try {
            return (int)mh$.invokeExact(_Filename, _VarName, _Buffer, _BufferCount);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _searchenv$MH() {
        return RuntimeHelper.requireNonNull(constants$40._searchenv$MH,"_searchenv");
    }
    /**
     * {@snippet :
     * void _searchenv(char* _Filename, char* _VarName, char* _Buffer);
     * }
     */
    public static void _searchenv(MemorySegment _Filename, MemorySegment _VarName, MemorySegment _Buffer) {
        var mh$ = _searchenv$MH();
        try {
            mh$.invokeExact(_Filename, _VarName, _Buffer);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _seterrormode$MH() {
        return RuntimeHelper.requireNonNull(constants$40._seterrormode$MH,"_seterrormode");
    }
    /**
     * {@snippet :
     * void _seterrormode(int _Mode);
     * }
     */
    public static void _seterrormode(int _Mode) {
        var mh$ = _seterrormode$MH();
        try {
            mh$.invokeExact(_Mode);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _beep$MH() {
        return RuntimeHelper.requireNonNull(constants$40._beep$MH,"_beep");
    }
    /**
     * {@snippet :
     * void _beep(unsigned int _Frequency, unsigned int _Duration);
     * }
     */
    public static void _beep(int _Frequency, int _Duration) {
        var mh$ = _beep$MH();
        try {
            mh$.invokeExact(_Frequency, _Duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle _sleep$MH() {
        return RuntimeHelper.requireNonNull(constants$40._sleep$MH,"_sleep");
    }
    /**
     * {@snippet :
     * void _sleep(unsigned long _Duration);
     * }
     */
    public static void _sleep(int _Duration) {
        var mh$ = _sleep$MH();
        try {
            mh$.invokeExact(_Duration);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ecvt$MH() {
        return RuntimeHelper.requireNonNull(constants$41.ecvt$MH,"ecvt");
    }
    /**
     * {@snippet :
     * char* ecvt(double _Value, int _DigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static MemorySegment ecvt(double _Value, int _DigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = ecvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _DigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle fcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$41.fcvt$MH,"fcvt");
    }
    /**
     * {@snippet :
     * char* fcvt(double _Value, int _FractionalDigitCount, int* _PtDec, int* _PtSign);
     * }
     */
    public static MemorySegment fcvt(double _Value, int _FractionalDigitCount, MemorySegment _PtDec, MemorySegment _PtSign) {
        var mh$ = fcvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _FractionalDigitCount, _PtDec, _PtSign);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle gcvt$MH() {
        return RuntimeHelper.requireNonNull(constants$41.gcvt$MH,"gcvt");
    }
    /**
     * {@snippet :
     * char* gcvt(double _Value, int _DigitCount, char* _DstBuf);
     * }
     */
    public static MemorySegment gcvt(double _Value, int _DigitCount, MemorySegment _DstBuf) {
        var mh$ = gcvt$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _DigitCount, _DstBuf);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle itoa$MH() {
        return RuntimeHelper.requireNonNull(constants$41.itoa$MH,"itoa");
    }
    /**
     * {@snippet :
     * char* itoa(int _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment itoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = itoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ltoa$MH() {
        return RuntimeHelper.requireNonNull(constants$41.ltoa$MH,"ltoa");
    }
    /**
     * {@snippet :
     * char* ltoa(long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment ltoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = ltoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle swab$MH() {
        return RuntimeHelper.requireNonNull(constants$41.swab$MH,"swab");
    }
    /**
     * {@snippet :
     * void swab(char* _Buf1, char* _Buf2, int _SizeInBytes);
     * }
     */
    public static void swab(MemorySegment _Buf1, MemorySegment _Buf2, int _SizeInBytes) {
        var mh$ = swab$MH();
        try {
            mh$.invokeExact(_Buf1, _Buf2, _SizeInBytes);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle ultoa$MH() {
        return RuntimeHelper.requireNonNull(constants$42.ultoa$MH,"ultoa");
    }
    /**
     * {@snippet :
     * char* ultoa(unsigned long _Value, char* _Buffer, int _Radix);
     * }
     */
    public static MemorySegment ultoa(int _Value, MemorySegment _Buffer, int _Radix) {
        var mh$ = ultoa$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Value, _Buffer, _Radix);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle putenv$MH() {
        return RuntimeHelper.requireNonNull(constants$42.putenv$MH,"putenv");
    }
    /**
     * {@snippet :
     * int putenv(char* _EnvString);
     * }
     */
    public static int putenv(MemorySegment _EnvString) {
        var mh$ = putenv$MH();
        try {
            return (int)mh$.invokeExact(_EnvString);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle onexit$MH() {
        return RuntimeHelper.requireNonNull(constants$42.onexit$MH,"onexit");
    }
    /**
     * {@snippet :
     * _onexit_t onexit(_onexit_t _Func);
     * }
     */
    public static MemorySegment onexit(MemorySegment _Func) {
        var mh$ = onexit$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(_Func);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle init_native$MH() {
        return RuntimeHelper.requireNonNull(constants$42.init_native$MH,"init_native");
    }
    /**
     * {@snippet :
     * void init_native();
     * }
     */
    public static void init_native() {
        var mh$ = init_native$MH();
        try {
            mh$.invokeExact();
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle init_pathfinder$MH() {
        return RuntimeHelper.requireNonNull(constants$42.init_pathfinder$MH,"init_pathfinder");
    }
    /**
     * {@snippet :
     * void init_pathfinder(struct State start, struct State goal);
     * }
     */
    public static void init_pathfinder(MemorySegment start, MemorySegment goal) {
        var mh$ = init_pathfinder$MH();
        try {
            mh$.invokeExact(start, goal);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle blank$MH() {
        return RuntimeHelper.requireNonNull(constants$42.blank$MH,"blank");
    }
    /**
     * {@snippet :
     * struct State blank();
     * }
     */
    public static MemorySegment blank(SegmentAllocator allocator) {
        var mh$ = blank$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle new_$MH() {
        return RuntimeHelper.requireNonNull(constants$43.new_$MH,"new");
    }
    /**
     * {@snippet :
     * struct State new(int64_t x, int64_t y, int64_t z);
     * }
     */
    public static MemorySegment new_(SegmentAllocator allocator, long x, long y, long z) {
        var mh$ = new_$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, x, y, z);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    public static MethodHandle full$MH() {
        return RuntimeHelper.requireNonNull(constants$43.full$MH,"full");
    }
    /**
     * {@snippet :
     * struct State full(int64_t x, int64_t y, int64_t z, double k0, double k1);
     * }
     */
    public static MemorySegment full(SegmentAllocator allocator, long x, long y, long z, double k0, double k1) {
        var mh$ = full$MH();
        try {
            return (java.lang.foreign.MemorySegment)mh$.invokeExact(allocator, x, y, z, k0, k1);
        } catch (Throwable ex$) {
            throw new AssertionError("should not reach here", ex$);
        }
    }
    /**
     * {@snippet :
     * #define _VCRUNTIME_DISABLED_WARNINGS 4514
     * }
     */
    public static int _VCRUNTIME_DISABLED_WARNINGS() {
        return (int)4514L;
    }
    /**
     * {@snippet :
     * #define NULL 0
     * }
     */
    public static MemorySegment NULL() {
        return constants$43.NULL$ADDR;
    }
    /**
     * {@snippet :
     * #define INT8_MIN -128
     * }
     */
    public static int INT8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT16_MIN -32768
     * }
     */
    public static int INT16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT32_MIN -2147483648
     * }
     */
    public static int INT32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT64_MIN -9223372036854775808
     * }
     */
    public static long INT64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT8_MAX 127
     * }
     */
    public static byte INT8_MAX() {
        return (byte)127L;
    }
    /**
     * {@snippet :
     * #define INT16_MAX 32767
     * }
     */
    public static short INT16_MAX() {
        return (short)32767L;
    }
    /**
     * {@snippet :
     * #define INT32_MAX 2147483647
     * }
     */
    public static int INT32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT64_MAX 9223372036854775807
     * }
     */
    public static long INT64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT8_MAX 255
     * }
     */
    public static byte UINT8_MAX() {
        return (byte)255L;
    }
    /**
     * {@snippet :
     * #define UINT16_MAX 65535
     * }
     */
    public static short UINT16_MAX() {
        return (short)65535L;
    }
    /**
     * {@snippet :
     * #define UINT32_MAX 4294967295
     * }
     */
    public static int UINT32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT64_MAX -1
     * }
     */
    public static long UINT64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MIN -128
     * }
     */
    public static int INT_LEAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MIN -32768
     * }
     */
    public static int INT_LEAST16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MIN -2147483648
     * }
     */
    public static int INT_LEAST32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_LEAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST8_MAX 127
     * }
     */
    public static byte INT_LEAST8_MAX() {
        return (byte)127L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST16_MAX 32767
     * }
     */
    public static short INT_LEAST16_MAX() {
        return (short)32767L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST32_MAX 2147483647
     * }
     */
    public static int INT_LEAST32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_LEAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_LEAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST8_MAX 255
     * }
     */
    public static byte UINT_LEAST8_MAX() {
        return (byte)255L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST16_MAX 65535
     * }
     */
    public static short UINT_LEAST16_MAX() {
        return (short)65535L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST32_MAX 4294967295
     * }
     */
    public static int UINT_LEAST32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_LEAST64_MAX -1
     * }
     */
    public static long UINT_LEAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MIN -128
     * }
     */
    public static int INT_FAST8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MIN -2147483648
     * }
     */
    public static int INT_FAST16_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MIN -2147483648
     * }
     */
    public static int INT_FAST32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MIN -9223372036854775808
     * }
     */
    public static long INT_FAST64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INT_FAST8_MAX 127
     * }
     */
    public static byte INT_FAST8_MAX() {
        return (byte)127L;
    }
    /**
     * {@snippet :
     * #define INT_FAST16_MAX 2147483647
     * }
     */
    public static int INT_FAST16_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_FAST32_MAX 2147483647
     * }
     */
    public static int INT_FAST32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define INT_FAST64_MAX 9223372036854775807
     * }
     */
    public static long INT_FAST64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST8_MAX 255
     * }
     */
    public static byte UINT_FAST8_MAX() {
        return (byte)255L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST16_MAX 4294967295
     * }
     */
    public static int UINT_FAST16_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST32_MAX 4294967295
     * }
     */
    public static int UINT_FAST32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define UINT_FAST64_MAX -1
     * }
     */
    public static long UINT_FAST64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MIN -9223372036854775808
     * }
     */
    public static long INTPTR_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INTPTR_MAX 9223372036854775807
     * }
     */
    public static long INTPTR_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINTPTR_MAX -1
     * }
     */
    public static long UINTPTR_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MIN -9223372036854775808
     * }
     */
    public static long INTMAX_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define INTMAX_MAX 9223372036854775807
     * }
     */
    public static long INTMAX_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define UINTMAX_MAX -1
     * }
     */
    public static long UINTMAX_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MIN -9223372036854775808
     * }
     */
    public static long PTRDIFF_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define PTRDIFF_MAX 9223372036854775807
     * }
     */
    public static long PTRDIFF_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define SIZE_MAX -1
     * }
     */
    public static long SIZE_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MIN -2147483648
     * }
     */
    public static int SIG_ATOMIC_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define SIG_ATOMIC_MAX 2147483647
     * }
     */
    public static int SIG_ATOMIC_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define _UCRT_DISABLED_WARNINGS 4324
     * }
     */
    public static int _UCRT_DISABLED_WARNINGS() {
        return (int)4324L;
    }
    /**
     * {@snippet :
     * #define _TRUNCATE -1
     * }
     */
    public static long _TRUNCATE() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define _CRT_SIZE_MAX -1
     * }
     */
    public static long _CRT_SIZE_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define __FILEW__ "C"
     * }
     */
    public static MemorySegment __FILEW__() {
        return constants$43.__FILEW__$SEGMENT;
    }
    /**
     * {@snippet :
     * #define __STDC_SECURE_LIB__ 200411
     * }
     */
    public static int __STDC_SECURE_LIB__() {
        return (int)200411L;
    }
    /**
     * {@snippet :
     * #define __GOT_SECURE_LIB__ 200411
     * }
     */
    public static int __GOT_SECURE_LIB__() {
        return (int)200411L;
    }
    /**
     * {@snippet :
     * #define _MAX_ITOSTR_BASE16_COUNT 9
     * }
     */
    public static int _MAX_ITOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define _MAX_ITOSTR_BASE10_COUNT 12
     * }
     */
    public static int _MAX_ITOSTR_BASE10_COUNT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define _MAX_ITOSTR_BASE8_COUNT 12
     * }
     */
    public static int _MAX_ITOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define _MAX_ITOSTR_BASE2_COUNT 33
     * }
     */
    public static int _MAX_ITOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * #define _MAX_LTOSTR_BASE16_COUNT 9
     * }
     */
    public static int _MAX_LTOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define _MAX_LTOSTR_BASE10_COUNT 12
     * }
     */
    public static int _MAX_LTOSTR_BASE10_COUNT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define _MAX_LTOSTR_BASE8_COUNT 12
     * }
     */
    public static int _MAX_LTOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define _MAX_LTOSTR_BASE2_COUNT 33
     * }
     */
    public static int _MAX_LTOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * #define _MAX_ULTOSTR_BASE16_COUNT 9
     * }
     */
    public static int _MAX_ULTOSTR_BASE16_COUNT() {
        return (int)9L;
    }
    /**
     * {@snippet :
     * #define _MAX_ULTOSTR_BASE10_COUNT 11
     * }
     */
    public static int _MAX_ULTOSTR_BASE10_COUNT() {
        return (int)11L;
    }
    /**
     * {@snippet :
     * #define _MAX_ULTOSTR_BASE8_COUNT 12
     * }
     */
    public static int _MAX_ULTOSTR_BASE8_COUNT() {
        return (int)12L;
    }
    /**
     * {@snippet :
     * #define _MAX_ULTOSTR_BASE2_COUNT 33
     * }
     */
    public static int _MAX_ULTOSTR_BASE2_COUNT() {
        return (int)33L;
    }
    /**
     * {@snippet :
     * #define _MAX_I64TOSTR_BASE16_COUNT 17
     * }
     */
    public static int _MAX_I64TOSTR_BASE16_COUNT() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define _MAX_I64TOSTR_BASE10_COUNT 21
     * }
     */
    public static int _MAX_I64TOSTR_BASE10_COUNT() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define _MAX_I64TOSTR_BASE8_COUNT 23
     * }
     */
    public static int _MAX_I64TOSTR_BASE8_COUNT() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * #define _MAX_I64TOSTR_BASE2_COUNT 65
     * }
     */
    public static int _MAX_I64TOSTR_BASE2_COUNT() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * #define _MAX_U64TOSTR_BASE16_COUNT 17
     * }
     */
    public static int _MAX_U64TOSTR_BASE16_COUNT() {
        return (int)17L;
    }
    /**
     * {@snippet :
     * #define _MAX_U64TOSTR_BASE10_COUNT 21
     * }
     */
    public static int _MAX_U64TOSTR_BASE10_COUNT() {
        return (int)21L;
    }
    /**
     * {@snippet :
     * #define _MAX_U64TOSTR_BASE8_COUNT 23
     * }
     */
    public static int _MAX_U64TOSTR_BASE8_COUNT() {
        return (int)23L;
    }
    /**
     * {@snippet :
     * #define _MAX_U64TOSTR_BASE2_COUNT 65
     * }
     */
    public static int _MAX_U64TOSTR_BASE2_COUNT() {
        return (int)65L;
    }
    /**
     * {@snippet :
     * #define SCHAR_MIN -128
     * }
     */
    public static int SCHAR_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define CHAR_MIN -128
     * }
     */
    public static int CHAR_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define CHAR_MAX 127
     * }
     */
    public static int CHAR_MAX() {
        return (int)127L;
    }
    /**
     * {@snippet :
     * #define SHRT_MIN -32768
     * }
     */
    public static int SHRT_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define INT_MIN -2147483648
     * }
     */
    public static int INT_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define UINT_MAX 4294967295
     * }
     */
    public static int UINT_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define LONG_MIN -2147483648
     * }
     */
    public static int LONG_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define LONG_MAX 2147483647
     * }
     */
    public static int LONG_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define ULONG_MAX 4294967295
     * }
     */
    public static int ULONG_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define LLONG_MAX 9223372036854775807
     * }
     */
    public static long LLONG_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define LLONG_MIN -9223372036854775808
     * }
     */
    public static long LLONG_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define ULLONG_MAX -1
     * }
     */
    public static long ULLONG_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define _I8_MIN -128
     * }
     */
    public static int _I8_MIN() {
        return (int)-128L;
    }
    /**
     * {@snippet :
     * #define _I8_MAX 127
     * }
     */
    public static byte _I8_MAX() {
        return (byte)127L;
    }
    /**
     * {@snippet :
     * #define _UI8_MAX 255
     * }
     */
    public static byte _UI8_MAX() {
        return (byte)255L;
    }
    /**
     * {@snippet :
     * #define _I16_MIN -32768
     * }
     */
    public static int _I16_MIN() {
        return (int)-32768L;
    }
    /**
     * {@snippet :
     * #define _I16_MAX 32767
     * }
     */
    public static short _I16_MAX() {
        return (short)32767L;
    }
    /**
     * {@snippet :
     * #define _UI16_MAX 65535
     * }
     */
    public static short _UI16_MAX() {
        return (short)65535L;
    }
    /**
     * {@snippet :
     * #define _I32_MIN -2147483648
     * }
     */
    public static int _I32_MIN() {
        return (int)-2147483648L;
    }
    /**
     * {@snippet :
     * #define _I32_MAX 2147483647
     * }
     */
    public static int _I32_MAX() {
        return (int)2147483647L;
    }
    /**
     * {@snippet :
     * #define _UI32_MAX 4294967295
     * }
     */
    public static int _UI32_MAX() {
        return (int)4294967295L;
    }
    /**
     * {@snippet :
     * #define _I64_MIN -9223372036854775808
     * }
     */
    public static long _I64_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define _I64_MAX 9223372036854775807
     * }
     */
    public static long _I64_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define _UI64_MAX -1
     * }
     */
    public static long _UI64_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define RSIZE_MAX 9223372036854775807
     * }
     */
    public static long RSIZE_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define LONG_LONG_MAX 9223372036854775807
     * }
     */
    public static long LONG_LONG_MAX() {
        return 9223372036854775807L;
    }
    /**
     * {@snippet :
     * #define LONG_LONG_MIN -9223372036854775808
     * }
     */
    public static long LONG_LONG_MIN() {
        return -9223372036854775808L;
    }
    /**
     * {@snippet :
     * #define ULONG_LONG_MAX -1
     * }
     */
    public static long ULONG_LONG_MAX() {
        return -1L;
    }
    /**
     * {@snippet :
     * #define _CVTBUFSIZE 349
     * }
     */
    public static int _CVTBUFSIZE() {
        return (int)349L;
    }
}


